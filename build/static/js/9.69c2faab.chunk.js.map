{"version":3,"sources":["views/pages/authentication/AuthWrapper1.js","views/pages/authentication/AuthCardWrapper.js","ui-component/extended/AnimateButton.js","assets/images/icons/social-google.svg","ui-component/cards/AuthFooter.js","utils/password-strength.js","views/pages/authentication/auth-forms/AuthRegister.js","views/pages/authentication/authentication3/Register3.js"],"names":["AuthWrapper1","styled","backgroundColor","theme","palette","primary","light","minHeight","AuthCardWrapper","children","other","sx","maxWidth","xs","lg","margin","md","flexGrow","flexBasis","content","p","sm","xl","AnimateButton","forwardRef","ref","offset1","offset2","type","direction","offset","scale","useCycle","x","cycleX","y","cycleY","div","animate","rotate","transition","repeat","Infinity","repeatType","duration","repeatDelay","undefined","onHoverEnd","onHoverStart","hover","tap","whileHover","whileTap","defaultProps","AuthFooter","justifyContent","variant","component","Link","href","target","underline","strengthColor","count","label","color","value","errorMain","warningDark","orangeMain","successMain","successDark","strengthIndicator","number","strengths","length","RegExp","test","hasNumber","hasSpecial","hasMixed","FirebaseRegister","others","useTheme","api","useAxios","matchDownSM","useScriptRef","useMediaQuery","breakpoints","down","customization","useSelector","state","useState","showPassword","setShowPassword","showConfirmPassword","setShowConfirmPassword","checked","setChecked","strength","setStrength","level","setLevel","googleHandler","console","error","handleClickShowPassword","handleClickShowConfirmPassword","handleMouseDownPassword","event","preventDefault","changePassword","temp","useEffect","Grid","container","spacing","item","Button","fullWidth","onClick","size","grey","borderColor","Box","mr","width","src","Google","alt","height","style","marginRight","alignItems","display","Divider","orientation","cursor","m","py","px","fontWeight","borderRadius","disableRipple","disabled","mb","Typography","initialValues","firstname","lastname","username","email","contactNumber","password","confirmPassword","validationSchema","Yup","shape","max","required","oneOf","onSubmit","values","setErrors","setStatus","setSubmitting","log","role","post","then","response","data","catch","err","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","FormControl","Boolean","typography","customInput","InputLabel","htmlFor","OutlinedInput","id","name","onChange","onBlur","defaultValue","FormHelperText","inputProps","e","endAdornment","InputAdornment","position","IconButton","onMouseDown","edge","changeConfirmPassword","fontSize","FormControlLabel","control","Checkbox","to","mt","disableElevation","Register","Logo","Stack","secondary","main","gutterBottom","textAlign","AuthRegister","textDecoration"],"mappings":"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","file":"static/js/9.69c2faab.chunk.js","sourcesContent":["// material-ui\nimport { styled } from '@mui/material/styles';\n\n// ==============================|| AUTHENTICATION 1 WRAPPER ||============================== //\n\nconst AuthWrapper1 = styled('div')(({ theme }) => ({\n    backgroundColor: theme.palette.primary.light,\n    minHeight: '100vh'\n}));\n\nexport default AuthWrapper1;\n","import PropTypes from 'prop-types';\n\n// material-ui\nimport { Box } from '@mui/material';\n\n// project import\nimport MainCard from 'ui-component/cards/MainCard';\n\n// ==============================|| AUTHENTICATION CARD WRAPPER ||============================== //\n\nconst AuthCardWrapper = ({ children, ...other }) => (\n    <MainCard\n        sx={{\n            maxWidth: { xs: 400, lg: 475 },\n            margin: { xs: 2.5, md: 3 },\n            '& > *': {\n                flexGrow: 1,\n                flexBasis: '50%'\n            }\n        }}\n        content={false}\n        {...other}\n    >\n        <Box sx={{ p: { xs: 2, sm: 3, xl: 5 } }}>{children}</Box>\n    </MainCard>\n);\n\nAuthCardWrapper.propTypes = {\n    children: PropTypes.node\n};\n\nexport default AuthCardWrapper;\n","import PropTypes from 'prop-types';\nimport { forwardRef } from 'react';\n// third-party\nimport { motion, useCycle } from 'framer-motion';\n\n// ==============================|| ANIMATION BUTTON ||============================== //\n\nconst AnimateButton = forwardRef(({ children, type, direction, offset, scale }, ref) => {\n    let offset1;\n    let offset2;\n    switch (direction) {\n        case 'up':\n        case 'left':\n            offset1 = offset;\n            offset2 = 0;\n            break;\n        case 'right':\n        case 'down':\n        default:\n            offset1 = 0;\n            offset2 = offset;\n            break;\n    }\n\n    const [x, cycleX] = useCycle(offset1, offset2);\n    const [y, cycleY] = useCycle(offset1, offset2);\n\n    switch (type) {\n        case 'rotate':\n            return (\n                <motion.div\n                    ref={ref}\n                    animate={{ rotate: 360 }}\n                    transition={{\n                        repeat: Infinity,\n                        repeatType: 'loop',\n                        duration: 2,\n                        repeatDelay: 0\n                    }}\n                >\n                    {children}\n                </motion.div>\n            );\n        case 'slide':\n            if (direction === 'up' || direction === 'down') {\n                return (\n                    <motion.div\n                        ref={ref}\n                        animate={{ y: y !== undefined ? y : '' }}\n                        onHoverEnd={() => cycleY()}\n                        onHoverStart={() => cycleY()}\n                    >\n                        {children}\n                    </motion.div>\n                );\n            }\n            return (\n                <motion.div ref={ref} animate={{ x: x !== undefined ? x : '' }} onHoverEnd={() => cycleX()} onHoverStart={() => cycleX()}>\n                    {children}\n                </motion.div>\n            );\n\n        case 'scale':\n        default:\n            if (typeof scale === 'number') {\n                scale = {\n                    hover: scale,\n                    tap: scale\n                };\n            }\n            return (\n                <motion.div ref={ref} whileHover={{ scale: scale?.hover }} whileTap={{ scale: scale?.tap }}>\n                    {children}\n                </motion.div>\n            );\n    }\n});\n\nAnimateButton.propTypes = {\n    children: PropTypes.node,\n    offset: PropTypes.number,\n    type: PropTypes.oneOf(['slide', 'scale', 'rotate']),\n    direction: PropTypes.oneOf(['up', 'down', 'left', 'right']),\n    scale: PropTypes.oneOfType([PropTypes.number, PropTypes.object])\n};\n\nAnimateButton.defaultProps = {\n    type: 'scale',\n    offset: 10,\n    direction: 'right',\n    scale: {\n        hover: 1,\n        tap: 0.9\n    }\n};\n\nexport default AnimateButton;\n","export default __webpack_public_path__ + \"static/media/social-google.9887eb8e.svg\";","// material-ui\nimport { Link, Typography, Stack } from '@mui/material';\n\n// ==============================|| FOOTER - AUTHENTICATION 2 & 3 ||============================== //\n\nconst AuthFooter = () => (\n    <Stack direction=\"row\" justifyContent=\"space-between\">\n        <Typography variant=\"subtitle2\" component={Link} href=\"https://berrydashboard.io\" target=\"_blank\" underline=\"hover\">\n            berrydashboard.io\n        </Typography>\n        <Typography variant=\"subtitle2\" component={Link} href=\"https://codedthemes.com\" target=\"_blank\" underline=\"hover\">\n            &copy; codedthemes.com\n        </Typography>\n    </Stack>\n);\n\nexport default AuthFooter;\n","/**\n * Password validator for login pages\n */\nimport value from 'assets/scss/_themes-vars.module.scss';\n\n// has number\nconst hasNumber = (number) => new RegExp(/[0-9]/).test(number);\n\n// has mix of small and capitals\nconst hasMixed = (number) => new RegExp(/[a-z]/).test(number) && new RegExp(/[A-Z]/).test(number);\n\n// has special chars\nconst hasSpecial = (number) => new RegExp(/[!#@$%^&*)(+=._-]/).test(number);\n\n// set color based on password strength\nexport const strengthColor = (count) => {\n    if (count < 2) return { label: 'Poor', color: value.errorMain };\n    if (count < 3) return { label: 'Weak', color: value.warningDark };\n    if (count < 4) return { label: 'Normal', color: value.orangeMain };\n    if (count < 5) return { label: 'Good', color: value.successMain };\n    if (count < 6) return { label: 'Strong', color: value.successDark };\n    return { label: 'Poor', color: value.errorMain };\n};\n\n// password strength indicator\nexport const strengthIndicator = (number) => {\n    let strengths = 0;\n    if (number.length > 5) strengths += 1;\n    if (number.length > 7) strengths += 1;\n    if (hasNumber(number)) strengths += 1;\n    if (hasSpecial(number)) strengths += 1;\n    if (hasMixed(number)) strengths += 1;\n    return strengths;\n};\n","import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport {\n    Box,\n    Button,\n    Checkbox,\n    Divider,\n    FormControl,\n    FormControlLabel,\n    FormHelperText,\n    Grid,\n    IconButton,\n    InputAdornment,\n    InputLabel,\n    OutlinedInput,\n    TextField,\n    Typography,\n    useMediaQuery\n} from '@mui/material';\n\n// third party\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\n\n// project imports\nimport useScriptRef from 'hooks/useScriptRef';\nimport Google from 'assets/images/icons/social-google.svg';\nimport AnimateButton from 'ui-component/extended/AnimateButton';\nimport { strengthColor, strengthIndicator } from 'utils/password-strength';\n\n// assets\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\n// import ServerService from 'apis/ServerService';\nimport useAxios from 'hooks/useAxios';\n\n// ===========================|| FIREBASE - REGISTER ||=========================== //\n\nconst FirebaseRegister = ({ ...others }) => {\n    const theme = useTheme();\n    const api = useAxios();\n    const scriptedRef = useScriptRef();\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\n    const customization = useSelector((state) => state.customization);\n    const [showPassword, setShowPassword] = useState(false);\n    const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n    const [checked, setChecked] = useState(true);\n\n    const [strength, setStrength] = useState(0);\n    const [level, setLevel] = useState();\n\n    const googleHandler = async () => {\n        console.error('Register');\n    };\n\n    const handleClickShowPassword = () => {\n        setShowPassword(!showPassword);\n    };\n\n    const handleClickShowConfirmPassword = () => {\n        setShowConfirmPassword(!showConfirmPassword);\n    };\n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    const changePassword = (value) => {\n        const temp = strengthIndicator(value);\n        setStrength(temp);\n        setLevel(strengthColor(temp));\n    };\n\n    const changeConfirmPassword = (value) => {\n        const temp = strengthIndicator(value);\n        setStrength(temp);\n        setLevel(strengthColor(temp));\n    };\n\n    useEffect(() => {\n        changePassword('123456');\n    }, []);\n\n    return (\n        <>\n            <Grid container direction=\"column\" justifyContent=\"center\" spacing={2}>\n                <Grid item xs={12}>\n                    <AnimateButton>\n                        <Button\n                            variant=\"outlined\"\n                            fullWidth\n                            onClick={googleHandler}\n                            size=\"large\"\n                            sx={{\n                                color: 'grey.700',\n                                backgroundColor: theme.palette.grey[50],\n                                borderColor: theme.palette.grey[100]\n                            }}\n                        >\n                            <Box sx={{ mr: { xs: 1, sm: 2, width: 20 } }}>\n                                <img src={Google} alt=\"google\" width={16} height={16} style={{ marginRight: matchDownSM ? 8 : 16 }} />\n                            </Box>\n                            Sign up with Google\n                        </Button>\n                    </AnimateButton>\n                </Grid>\n                <Grid item xs={12}>\n                    <Box sx={{ alignItems: 'center', display: 'flex' }}>\n                        <Divider sx={{ flexGrow: 1 }} orientation=\"horizontal\" />\n                        <Button\n                            variant=\"outlined\"\n                            sx={{\n                                cursor: 'unset',\n                                m: 2,\n                                py: 0.5,\n                                px: 7,\n                                borderColor: `${theme.palette.grey[100]} !important`,\n                                color: `${theme.palette.grey[900]}!important`,\n                                fontWeight: 500,\n                                borderRadius: `${customization.borderRadius}px`\n                            }}\n                            disableRipple\n                            disabled\n                        >\n                            OR\n                        </Button>\n                        <Divider sx={{ flexGrow: 1 }} orientation=\"horizontal\" />\n                    </Box>\n                </Grid>\n                <Grid item xs={12} container alignItems=\"center\" justifyContent=\"center\">\n                    <Box sx={{ mb: 2 }}>\n                        <Typography variant=\"subtitle1\">Sign up with Email address</Typography>\n                    </Box>\n                </Grid>\n            </Grid>\n\n            <Formik\n                initialValues={{\n                    firstname: '',\n                    lastname: '',\n                    username: '',\n                    email: '',\n                    contactNumber: '',\n                    password: '',\n                    confirmPassword: ''\n                    // submit: null\n                }}\n                validationSchema={Yup.object().shape({\n                    firstname: Yup.string().max(255).required('First Name is required'),\n                    lastname: Yup.string().max(255).required('Last Name is required'),\n                    username: Yup.string().max(255).required('Username is required'),\n                    contactNumber: Yup.number().required('Contact Number is required'),\n                    email: Yup.string().email('Must be a valid email').max(255).required('Email Id is required'),\n                    password: Yup.string().max(255).required('Password is required'),\n                    confirmPassword: Yup.string()\n                        .oneOf([Yup.ref('password')], 'Both the password should be same')\n                        .required('Confirm Password is required')\n                })}\n                onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n                    console.log({ ...values, role: 'superadmin' }, 'values');\n                    api.post('/admin/register', { ...values, role: 'superadmin' })\n                        .then((response) => {\n                            console.log(response.data);\n                        })\n                        .catch((err) => {\n                            console.log(err);\n                        });\n                    //     // const response = await ServerService.adminRegister({ ...values, role: 'superadmin' });\n                    //     if (scriptedRef.current) {\n                    //         setStatus({ success: true });\n                    //         setSubmitting(false);\n                    //     }\n                    // } catch (err) {\n                    //     console.error(err);\n                    //     if (scriptedRef.current) {\n                    //         setStatus({ success: false });\n                    //         // setErrors({ submit: err.message });\n                    //         setSubmitting(false);\n                    //     }\n                    // }\n                }}\n            >\n                {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\n                    <form noValidate onSubmit={handleSubmit} {...others}>\n                        <FormControl\n                            fullWidth\n                            error={Boolean(touched.firstname && errors.firstname)}\n                            sx={{ ...theme.typography.customInput }}\n                        >\n                            <InputLabel htmlFor=\"outlined-adornment-firstname-register\">First Name</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-firstname-register\"\n                                name=\"firstname\"\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                value={values.firstname}\n                                margin=\"normal\"\n                                type=\"text\"\n                                defaultValue=\"\"\n                            />\n                            {touched.firstname && errors.firstname && (\n                                <FormHelperText error id=\"standard-weight-helper-text--register\">\n                                    {errors.firstname}\n                                </FormHelperText>\n                            )}\n                        </FormControl>\n                        <FormControl\n                            fullWidth\n                            error={Boolean(touched.lastname && errors.lastname)}\n                            sx={{ ...theme.typography.customInput }}\n                        >\n                            <InputLabel htmlFor=\"outlined-adornment-lastname-register\">Last Name</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-lastname-register\"\n                                name=\"lastname\"\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                value={values.lastname}\n                                margin=\"normal\"\n                                type=\"text\"\n                                defaultValue=\"\"\n                            />\n                            {touched.lastname && errors.lastname && (\n                                <FormHelperText error id=\"standard-weight-helper-text--register\">\n                                    {errors.lastname}\n                                </FormHelperText>\n                            )}\n                        </FormControl>\n                        <FormControl\n                            fullWidth\n                            error={Boolean(touched.username && errors.username)}\n                            sx={{ ...theme.typography.customInput }}\n                        >\n                            <InputLabel htmlFor=\"outlined-adornment-username-register\">User Name</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-username-register\"\n                                name=\"username\"\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                value={values.username}\n                                type=\"text\"\n                                defaultValue=\"\"\n                            />\n                            {touched.username && errors.username && (\n                                <FormHelperText error id=\"standard-weight-helper-text--register\">\n                                    {errors.username}\n                                </FormHelperText>\n                            )}\n                        </FormControl>\n\n                        <FormControl fullWidth error={Boolean(touched.email && errors.email)} sx={{ ...theme.typography.customInput }}>\n                            <InputLabel htmlFor=\"outlined-adornment-email-register\">Email Address</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-email-register\"\n                                type=\"email\"\n                                name=\"email\"\n                                value={values.email}\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                                inputProps={{}}\n                            />\n                            {touched.email && errors.email && (\n                                <FormHelperText error id=\"standard-weight-helper-text--register\">\n                                    {errors.email}\n                                </FormHelperText>\n                            )}\n                        </FormControl>\n                        <FormControl\n                            fullWidth\n                            error={Boolean(touched.contactNumber && errors.contactNumber)}\n                            sx={{ ...theme.typography.customInput }}\n                        >\n                            <InputLabel htmlFor=\"outlined-adornment-contactNumber-register\">Contact Number</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-contactNumber-register\"\n                                type=\"number\"\n                                name=\"contactNumber\"\n                                value={values.contactNumber}\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                                inputProps={{}}\n                            />\n                            {touched.contactNumber && errors.contactNumber && (\n                                <FormHelperText error id=\"standard-weight-helper-text--register\">\n                                    {errors.contactNumber}\n                                </FormHelperText>\n                            )}\n                        </FormControl>\n\n                        <FormControl\n                            fullWidth\n                            error={Boolean(touched.password && errors.password)}\n                            sx={{ ...theme.typography.customInput }}\n                        >\n                            <InputLabel htmlFor=\"outlined-adornment-password-register\">Password</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-password-register\"\n                                type={showPassword ? 'text' : 'password'}\n                                value={values.password}\n                                name=\"password\"\n                                label=\"Password\"\n                                onBlur={handleBlur}\n                                onChange={(e) => {\n                                    handleChange(e);\n                                    changePassword(e.target.value);\n                                }}\n                                endAdornment={\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            aria-label=\"toggle password visibility\"\n                                            onClick={handleClickShowPassword}\n                                            onMouseDown={handleMouseDownPassword}\n                                            edge=\"end\"\n                                            size=\"large\"\n                                        >\n                                            {showPassword ? <Visibility /> : <VisibilityOff />}\n                                        </IconButton>\n                                    </InputAdornment>\n                                }\n                                inputProps={{}}\n                            />\n                            {touched.password && errors.password && (\n                                <FormHelperText error id=\"standard-weight-helper-text-password-register\">\n                                    {errors.password}\n                                </FormHelperText>\n                            )}\n                        </FormControl>\n                        <FormControl\n                            fullWidth\n                            error={Boolean(touched.confirmPassword && errors.confirmPassword)}\n                            sx={{ ...theme.typography.customInput }}\n                        >\n                            <InputLabel htmlFor=\"outlined-adornment-cpassword-register\">Confirm Password</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-password-register\"\n                                type={showConfirmPassword ? 'text' : 'password'}\n                                value={values.confirmPassword}\n                                name=\"confirmPassword\"\n                                label=\"confirmPassword\"\n                                onBlur={handleBlur}\n                                onChange={(e) => {\n                                    handleChange(e);\n                                    changeConfirmPassword(e.target.value);\n                                }}\n                                endAdornment={\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            aria-label=\"toggle password visibility\"\n                                            onClick={handleClickShowConfirmPassword}\n                                            onMouseDown={handleMouseDownPassword}\n                                            edge=\"end\"\n                                            size=\"large\"\n                                        >\n                                            {showConfirmPassword ? <Visibility /> : <VisibilityOff />}\n                                        </IconButton>\n                                    </InputAdornment>\n                                }\n                                inputProps={{}}\n                            />\n                            {touched.password && errors.confirmPassword && (\n                                <FormHelperText error id=\"standard-weight-helper-text-password-register\">\n                                    {errors.confirmPassword}\n                                </FormHelperText>\n                            )}\n                        </FormControl>\n\n                        {strength !== 0 && (\n                            <FormControl fullWidth>\n                                <Box sx={{ mb: 2 }}>\n                                    <Grid container spacing={2} alignItems=\"center\">\n                                        <Grid item>\n                                            <Box\n                                                style={{ backgroundColor: level?.color }}\n                                                sx={{ width: 85, height: 8, borderRadius: '7px' }}\n                                            />\n                                        </Grid>\n                                        <Grid item>\n                                            <Typography variant=\"subtitle1\" fontSize=\"0.75rem\">\n                                                {level?.label}\n                                            </Typography>\n                                        </Grid>\n                                    </Grid>\n                                </Box>\n                            </FormControl>\n                        )}\n\n                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                            <Grid item>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            checked={checked}\n                                            onChange={(event) => setChecked(event.target.checked)}\n                                            name=\"checked\"\n                                            color=\"primary\"\n                                        />\n                                    }\n                                    label={\n                                        <Typography variant=\"subtitle1\">\n                                            Agree with &nbsp;\n                                            <Typography variant=\"subtitle1\" component={Link} to=\"#\">\n                                                Terms & Condition.\n                                            </Typography>\n                                        </Typography>\n                                    }\n                                />\n                            </Grid>\n                        </Grid>\n                        {/* {errors.submit && (\n                            <Box sx={{ mt: 3 }}>\n                                <FormHelperText error>{errors.submit}</FormHelperText>\n                            </Box>\n                        )} */}\n\n                        <Box sx={{ mt: 2 }}>\n                            <AnimateButton>\n                                <Button\n                                    disableElevation\n                                    disabled={isSubmitting}\n                                    fullWidth\n                                    size=\"large\"\n                                    type=\"submit\"\n                                    variant=\"contained\"\n                                    color=\"secondary\"\n                                >\n                                    Sign up\n                                </Button>\n                            </AnimateButton>\n                        </Box>\n                    </form>\n                )}\n            </Formik>\n        </>\n    );\n};\n\nexport default FirebaseRegister;\n","import { Link } from 'react-router-dom';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Divider, Grid, Stack, Typography, useMediaQuery } from '@mui/material';\n\n// project imports\nimport AuthWrapper1 from '../AuthWrapper1';\nimport AuthCardWrapper from '../AuthCardWrapper';\nimport Logo from 'ui-component/Logo';\nimport AuthRegister from '../auth-forms/AuthRegister';\nimport AuthFooter from 'ui-component/cards/AuthFooter';\n\n// assets\n\n// ===============================|| AUTH3 - REGISTER ||=============================== //\n\nconst Register = () => {\n    const theme = useTheme();\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\n\n    return (\n        <AuthWrapper1>\n            <Grid container direction=\"column\" justifyContent=\"flex-end\" sx={{ minHeight: '100vh' }}>\n                <Grid item xs={12}>\n                    <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ minHeight: 'calc(100vh - 68px)' }}>\n                        <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\n                            <AuthCardWrapper>\n                                <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\n                                    <Grid item sx={{ mb: 3 }}>\n                                        <Link to=\"#\">\n                                            <Logo />\n                                        </Link>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid\n                                            container\n                                            direction={matchDownSM ? 'column-reverse' : 'row'}\n                                            alignItems=\"center\"\n                                            justifyContent=\"center\"\n                                        >\n                                            <Grid item>\n                                                <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1}>\n                                                    <Typography\n                                                        color={theme.palette.secondary.main}\n                                                        gutterBottom\n                                                        variant={matchDownSM ? 'h3' : 'h2'}\n                                                    >\n                                                        Sign up\n                                                    </Typography>\n                                                    <Typography\n                                                        variant=\"caption\"\n                                                        fontSize=\"16px\"\n                                                        textAlign={matchDownSM ? 'center' : 'inherit'}\n                                                    >\n                                                        Enter your credentials to continue\n                                                    </Typography>\n                                                </Stack>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <AuthRegister />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Divider />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid item container direction=\"column\" alignItems=\"center\" xs={12}>\n                                            <Typography\n                                                component={Link}\n                                                to=\"/pages/login/login3\"\n                                                variant=\"subtitle1\"\n                                                sx={{ textDecoration: 'none' }}\n                                            >\n                                                Already have an account?\n                                            </Typography>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </AuthCardWrapper>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12} sx={{ m: 3, mt: 1 }}>\n                    <AuthFooter />\n                </Grid>\n            </Grid>\n        </AuthWrapper1>\n    );\n};\n\nexport default Register;\n"],"sourceRoot":""}