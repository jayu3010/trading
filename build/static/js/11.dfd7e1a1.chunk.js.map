{"version":3,"sources":["../node_modules/yup/lib/locale.js","../node_modules/yup/lib/util/printValue.js","views/services/preference-shares/EditFeature.jsx","views/services/preference-shares/preference-shares.jsx"],"names":["Object","defineProperty","exports","value","string","object","number","mixed","default","date","boolean","array","obj","_printValue","require","__esModule","required","oneOf","notOneOf","notType","path","type","originalValue","isCast","msg","defined","length","min","max","matches","email","url","uuid","trim","lowercase","uppercase","lessThan","moreThan","positive","negative","integer","isValue","noUnknown","_default","assign","create","quoteStrings","result","printSimpleValue","JSON","stringify","key","this","toString","prototype","errorToString","Error","regExpToString","RegExp","symbolToString","Symbol","SYMBOL_REGEXP","printNumber","val","typeOf","name","call","replace","tag","slice","isNaN","getTime","toISOString","style","position","top","left","maxWidth","maxHeight","overflow","transform","minWidth","bgcolor","borderRadius","boxShadow","p","EditFeature","handleClose","open","feature","setIsUpdateTable","axios","useAxios","useState","initialValues","setInitialValues","useEffect","Modal","onClose","Box","sx","enableReinitialize","onSubmit","values","put","then","response","console","log","data","swal","icon","setTimeout","catch","err","message","handleBlur","handleChange","errors","handleSubmit","isSubmitting","touched","SubCard","title","Grid","container","spacing","item","xs","md","TextField","error","minimumCapital","onChange","onBlur","helperText","fullWidth","id","label","variant","color","tenure","dividend","preferenceShareValue","capitalGainValue","tdsApplicable","Divider","mt","mx","display","justifyContent","alignItems","Button","onClick","startIcon","endIcon","disabled","useStyles","makeStyles","theme","actionsContainer","PreferenceShares","setLoading","setOpen","setPreviousData","setFeature","get","overview","features","handleEdit","MainCard","width","float","margin","border","textAlign","lineHeight","fontWeight","IconButton"],"mappings":"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","file":"static/js/11.dfd7e1a1.chunk.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.string = exports.object = exports.number = exports.mixed = exports.default = exports.date = exports.boolean = exports.array = void 0;\n\nvar _printValue = _interopRequireDefault(require(\"./util/printValue\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nlet mixed = {\n  default: '${path} is invalid',\n  required: '${path} is a required field',\n  oneOf: '${path} must be one of the following values: ${values}',\n  notOneOf: '${path} must not be one of the following values: ${values}',\n  notType: ({\n    path,\n    type,\n    value,\n    originalValue\n  }) => {\n    let isCast = originalValue != null && originalValue !== value;\n    let msg = `${path} must be a \\`${type}\\` type, ` + `but the final value was: \\`${(0, _printValue.default)(value, true)}\\`` + (isCast ? ` (cast from the value \\`${(0, _printValue.default)(originalValue, true)}\\`).` : '.');\n\n    if (value === null) {\n      msg += `\\n If \"null\" is intended as an empty value be sure to mark the schema as \\`.nullable()\\``;\n    }\n\n    return msg;\n  },\n  defined: '${path} must be defined'\n};\nexports.mixed = mixed;\nlet string = {\n  length: '${path} must be exactly ${length} characters',\n  min: '${path} must be at least ${min} characters',\n  max: '${path} must be at most ${max} characters',\n  matches: '${path} must match the following: \"${regex}\"',\n  email: '${path} must be a valid email',\n  url: '${path} must be a valid URL',\n  uuid: '${path} must be a valid UUID',\n  trim: '${path} must be a trimmed string',\n  lowercase: '${path} must be a lowercase string',\n  uppercase: '${path} must be a upper case string'\n};\nexports.string = string;\nlet number = {\n  min: '${path} must be greater than or equal to ${min}',\n  max: '${path} must be less than or equal to ${max}',\n  lessThan: '${path} must be less than ${less}',\n  moreThan: '${path} must be greater than ${more}',\n  positive: '${path} must be a positive number',\n  negative: '${path} must be a negative number',\n  integer: '${path} must be an integer'\n};\nexports.number = number;\nlet date = {\n  min: '${path} field must be later than ${min}',\n  max: '${path} field must be at earlier than ${max}'\n};\nexports.date = date;\nlet boolean = {\n  isValue: '${path} field must be ${value}'\n};\nexports.boolean = boolean;\nlet object = {\n  noUnknown: '${path} field has unspecified keys: ${unknown}'\n};\nexports.object = object;\nlet array = {\n  min: '${path} field must have at least ${min} items',\n  max: '${path} field must have less than or equal to ${max} items',\n  length: '${path} must have ${length} items'\n};\nexports.array = array;\n\nvar _default = Object.assign(Object.create(null), {\n  mixed,\n  string,\n  number,\n  date,\n  object,\n  array,\n  boolean\n});\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = printValue;\nconst toString = Object.prototype.toString;\nconst errorToString = Error.prototype.toString;\nconst regExpToString = RegExp.prototype.toString;\nconst symbolToString = typeof Symbol !== 'undefined' ? Symbol.prototype.toString : () => '';\nconst SYMBOL_REGEXP = /^Symbol\\((.*)\\)(.*)$/;\n\nfunction printNumber(val) {\n  if (val != +val) return 'NaN';\n  const isNegativeZero = val === 0 && 1 / val < 0;\n  return isNegativeZero ? '-0' : '' + val;\n}\n\nfunction printSimpleValue(val, quoteStrings = false) {\n  if (val == null || val === true || val === false) return '' + val;\n  const typeOf = typeof val;\n  if (typeOf === 'number') return printNumber(val);\n  if (typeOf === 'string') return quoteStrings ? `\"${val}\"` : val;\n  if (typeOf === 'function') return '[Function ' + (val.name || 'anonymous') + ']';\n  if (typeOf === 'symbol') return symbolToString.call(val).replace(SYMBOL_REGEXP, 'Symbol($1)');\n  const tag = toString.call(val).slice(8, -1);\n  if (tag === 'Date') return isNaN(val.getTime()) ? '' + val : val.toISOString(val);\n  if (tag === 'Error' || val instanceof Error) return '[' + errorToString.call(val) + ']';\n  if (tag === 'RegExp') return regExpToString.call(val);\n  return null;\n}\n\nfunction printValue(value, quoteStrings) {\n  let result = printSimpleValue(value, quoteStrings);\n  if (result !== null) return result;\n  return JSON.stringify(value, function (key, value) {\n    let result = printSimpleValue(this[key], quoteStrings);\n    if (result !== null) return result;\n    return value;\n  }, 2);\n}","/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable react/prop-types */\nimport { Button, Divider, Grid, TextField, Switch, Typography } from '@mui/material';\nimport Box from '@mui/material/Box';\nimport Modal from '@mui/material/Modal';\nimport { IconArrowRight, IconX } from '@tabler/icons';\nimport { useAxios } from 'hooks';\nimport { useEffect, useState } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport swal from 'sweetalert';\nimport SubCard from 'ui-component/cards/SubCard';\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    maxWidth: '98%',\n    maxHeight: '90vh',\n    overflow: 'auto',\n    transform: 'translate(-50%, -50%)',\n    minWidth: '50%',\n    bgcolor: 'background.paper',\n    borderRadius: '15px',\n    boxShadow: 24,\n    p: 4\n};\n\nconst EditFeature = ({ handleClose, open, setIsUpdateTable, feature }) => {\n    const axios = useAxios();\n    const [initialValues, setInitialValues] = useState({});\n\n    useEffect(() => {\n        setInitialValues(feature);\n    }, [feature]);\n\n    return (\n        <>\n            <Modal open={open} onClose={handleClose} aria-labelledby=\"modal-modal-title\" aria-describedby=\"modal-modal-description\">\n                <Box sx={style}>\n                    <Formik\n                        initialValues={initialValues}\n                        enableReinitialize\n                        onSubmit={async (values) => {\n                            try {\n                                axios\n                                    .put(`http://43.204.210.119/api/overview/preference/update/62c55ada7729bb047ee8d06e`, values)\n                                    .then((response) => {\n                                        console.log(response.data);\n                                        swal('Successfully Update', { icon: 'success' });\n                                        setTimeout(() => {\n                                            handleClose();\n                                        }, 1000);\n                                    })\n                                    .catch((err) => console.log(err));\n                            } catch (err) {\n                                swal(err.response.data.message || 'Something went wrong');\n                            }\n                        }}\n                    >\n                        {({ handleBlur, handleChange, values, errors, handleSubmit, isSubmitting, touched }) => (\n                            <SubCard title=\"Edit Preference Shares Features\">\n                                <Grid container spacing={2}>\n                                    <Grid item xs={12} md={6}>\n                                        <TextField\n                                            name=\"minimumCapital\"\n                                            error={errors.minimumCapital}\n                                            onChange={handleChange('minimumCapital')}\n                                            onBlur={() => handleBlur('minimumCapital')}\n                                            helperText={errors.minimumCapital}\n                                            fullWidth\n                                            value={values.minimumCapital}\n                                            id=\"minimumCapital\"\n                                            label=\"Minimum Capital *\"\n                                            variant=\"outlined\"\n                                            color=\"secondary\"\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} md={6}>\n                                        <TextField\n                                            name=\"tenure\"\n                                            error={errors.tenure}\n                                            onChange={handleChange('tenure')}\n                                            onBlur={() => handleBlur('tenure')}\n                                            helperText={errors.tenure}\n                                            fullWidth\n                                            value={values.tenure}\n                                            id=\"tenure\"\n                                            label=\"Tenure *\"\n                                            variant=\"outlined\"\n                                            color=\"secondary\"\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} md={6}>\n                                        <TextField\n                                            name=\"dividend\"\n                                            error={errors.dividend}\n                                            onChange={handleChange('dividend')}\n                                            onBlur={() => handleBlur('dividend')}\n                                            helperText={errors.dividend}\n                                            fullWidth\n                                            value={values.dividend}\n                                            id=\"dividend\"\n                                            label=\"Dividend *\"\n                                            variant=\"outlined\"\n                                            color=\"secondary\"\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} md={6}>\n                                        <TextField\n                                            name=\"preferenceShareValue\"\n                                            error={errors.preferenceShareValue}\n                                            onChange={handleChange('preferenceShareValue')}\n                                            onBlur={() => handleBlur('preferenceShareValue')}\n                                            helperText={errors.preferenceShareValue}\n                                            fullWidth\n                                            value={values.preferenceShareValue}\n                                            id=\"preferenceShareValue\"\n                                            label=\"Preference Share Value*\"\n                                            variant=\"outlined\"\n                                            color=\"secondary\"\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} md={6}>\n                                        <TextField\n                                            name=\"capitalGainValue\"\n                                            error={errors.capitalGainValue}\n                                            onChange={handleChange('capitalGainValue')}\n                                            onBlur={() => handleBlur('capitalGainValue')}\n                                            helperText={errors.capitalGainValue}\n                                            fullWidth\n                                            value={values.capitalGainValue}\n                                            id=\"capitalGainValue\"\n                                            label=\"Capital Gain Value *\"\n                                            variant=\"outlined\"\n                                            color=\"secondary\"\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} md={6}>\n                                        <TextField\n                                            name=\"tdsApplicable\"\n                                            error={errors.tdsApplicable}\n                                            onChange={handleChange('tdsApplicable')}\n                                            onBlur={() => handleBlur('tdsApplicable')}\n                                            helperText={errors.tdsApplicable}\n                                            fullWidth\n                                            value={values.tdsApplicable}\n                                            id=\"tdsApplicable\"\n                                            label=\"TDS Applicable *\"\n                                            variant=\"outlined\"\n                                            color=\"secondary\"\n                                        />\n                                    </Grid>\n                                </Grid>\n                                <Divider />\n                                <Box sx={{ mt: 4, mx: 2, display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                                    <Button onClick={handleClose} variant=\"outlined\" startIcon={<IconX />} color=\"secondary\">\n                                        Cancel\n                                    </Button>\n                                    <Button\n                                        onClick={handleSubmit}\n                                        variant=\"contained\"\n                                        endIcon={<IconArrowRight />}\n                                        color=\"secondary\"\n                                        disabled={isSubmitting}\n                                    >\n                                        {feature ? 'Update' : 'Create'}\n                                    </Button>\n                                </Box>\n                            </SubCard>\n                        )}\n                    </Formik>\n                </Box>\n            </Modal>\n        </>\n    );\n};\n\nexport default EditFeature;\n","/* eslint-disable no-underscore-dangle */\nimport { useEffect, useState } from 'react';\nimport { Box, Button, CircularProgress, IconButton, Switch, FormControl, Select, MenuItem, TextField } from '@mui/material';\nimport { IconEdit } from '@tabler/icons';\nimport { format } from 'date-fns';\n\nimport config from 'config';\nimport MainCard from 'ui-component/cards/MainCard';\nimport SubCard from 'ui-component/cards/SubCard';\nimport CommonTable from 'ui-component/Table/CommonTable';\nimport DropDown from 'ui-component/Table/CustomDropDown';\nimport EditFeature from './EditFeature';\nimport { makeStyles } from '@mui/styles';\nimport { useAxios } from 'hooks';\nimport { boolean } from 'yup/lib/locale';\n\nconst column = [\n    'Sl. No',\n    'Description',\n    'Minimum Capital',\n    'Tenure',\n    'Dividend',\n    'Preference Share Value',\n    'Capital Gain Value',\n    'TDS Application'\n];\n\nconst useStyles = makeStyles((theme) => ({\n    actionsContainer: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'end'\n    }\n}));\n\nconst PreferenceShares = () => {\n    const classes = useStyles();\n    const axios = useAxios();\n    const [active, setActive] = useState(true);\n    const [loading, setLoading] = useState(true);\n    const [service, setService] = useState([]);\n    const [isUpdateTable, setIsUpdateTable] = useState(false);\n    const [open, setOpen] = useState(false);\n    const [searches, setSearches] = useState([]);\n    const [isSearch, setIsSearch] = useState(false);\n    const [previousData, setPreviousData] = useState(null);\n    const [checked, setChecked] = useState(false);\n    const [feature, setFeature] = useState({\n        minimumCapital: '',\n        tenure: '',\n        dividend: '',\n        preferenceShareValue: '',\n        capitalGainValue: '',\n        tdsApplicable: ''\n    });\n\n    useEffect(() => {\n        axios\n            .get(`http://43.204.210.119/api/overview/preference/62c55ada7729bb047ee8d06e`)\n            .then((response) => {\n                setLoading(false);\n                setFeature({\n                    minimumCapital: response.data.overview.features.minimumCapital,\n                    tenure: response.data.overview.features.tenure,\n                    dividend: response.data.overview.features.dividend,\n                    preferenceShareValue: response.data.overview.features.preferenceShareValue,\n                    capitalGainValue: response.data.overview.features.capitalGainValue,\n                    tdsApplicable: response.data.overview.features.tdsApplicable ? 'true' : 'false'\n                });\n            })\n            .catch((err) => console.log(err));\n    });\n\n    const handleOpen = () => {\n        setPreviousData(null);\n        setOpen(true);\n    };\n    const handleClose = () => setOpen(false);\n    const handleEdit = () => {\n        handleOpen();\n        setFeature(feature);\n    };\n\n    return (\n        <>\n            <div>\n                <MainCard title=\"Preference Share Service\">\n                    <SubCard>\n                        <Box style={{ width: '48%', float: 'left', margin: '1%' }}>\n                            <h3 style={{ color: '#5e35b1' }}>Overview</h3>\n                            <hr style={{ border: '0.2px solid #d6d4d4' }} />\n                            <p style={{ textAlign: 'justify', lineHeight: '25px' }}>\n                                SHREEG EXPERT WEALTH ADVISORY LIMITED are truly Holding companies which are making consistent growth from\n                                our holding strategies since 2016. We are allotting our preference shares to our precious valueable\n                                customers for their multi bagger return possibilities along with the company&apos;s furture journey. This\n                                proposal gives our shareholder dividend facilities along with long term market value gain in our company\n                                preference shares.\n                            </p>\n                        </Box>\n                        <Box style={{ width: '38%', float: 'left', margin: '1% 5%' }}>\n                            <h3 style={{ color: '#5e35b1' }}>Features</h3>\n                            <hr style={{ border: '0.2px solid #d6d4d4' }} />\n                            <p style={{ textAlign: 'justify', lineHeight: '25px', width: '40%', float: 'left', fontWeight: 'bold' }}>\n                                Min Capital <br />\n                                Tenure <br />\n                                Dividend <br />\n                                Preference Share Value <br />\n                                Capital Gain Value <br />\n                                TDS applicable\n                            </p>\n                            <p style={{ textAlign: 'justify', lineHeight: '25px', width: '59%', float: 'left' }}>\n                                : {feature.minimumCapital} <br /> : {feature.tenure} <br /> : {feature.dividend} <br /> :{' '}\n                                {feature.preferenceShareValue} <br /> : {feature.capitalGainValue} <br /> : {feature.tdsApplicable}\n                                <IconButton style={{ float: 'right' }} onClick={() => handleEdit()}>\n                                    <IconEdit />\n                                </IconButton>\n                            </p>\n                        </Box>\n                    </SubCard>\n                </MainCard>\n            </div>\n            <EditFeature handleClose={handleClose} open={open} setIsUpdateTable={setIsUpdateTable} feature={feature} />\n        </>\n    );\n};\n\nexport default PreferenceShares;\n"],"sourceRoot":""}