{"version":3,"sources":["views/bids/UpcomingBids.jsx"],"names":["tableData","column","useStyles","makeStyles","theme","actionsContainer","display","alignItems","justifyContent","UpcomingBids","classes","useAxios","useState","loading","setLoading","bids","setBids","isUpdateTable","setIsUpdateTable","searches","setSearches","isSearch","setIsSearch","deleteData","setDeleteData","useEffect","bidName","totalAmount","startDate","declarationDate","totalTime","console","log","_id","handleDelete","index","data","map","i","id","format","Date","action","className","onClick","title","color","secondary","sx","onKeyUp","e","filter","b","toUpperCase","includes","target","value","label","size","length","p","m","bgcolor","borderRadius","setBanner"],"mappings":"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","file":"static/js/17.011ec35e.chunk.js","sourcesContent":["/* eslint-disable no-underscore-dangle */\nimport { useEffect, useState } from 'react';\nimport { Box, Button, CircularProgress, IconButton, Switch, FormControl, Select, MenuItem, TextField } from '@mui/material';\nimport { IconPlus, IconEdit, IconTrash } from '@tabler/icons';\nimport { format } from 'date-fns';\n\nimport config from 'config';\nimport MainCard from 'ui-component/cards/MainCard';\nimport SubCard from 'ui-component/cards/SubCard';\nimport CommonTable from 'ui-component/Table/CommonTable';\nimport DropDown from 'ui-component/Table/CustomDropDown';\nimport { makeStyles } from '@mui/styles';\nimport { useAxios } from 'hooks';\n\nlet tableData = [];\nconst column = ['Sl. No', 'Bid Name', 'Total Amount to be Bid', 'Start Date', 'Declaration Date', 'Total Time Taken', 'Actions'];\n\nconst useStyles = makeStyles((theme) => ({\n    actionsContainer: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'end'\n    }\n}));\n\nconst UpcomingBids = () => {\n    const classes = useStyles();\n    const axios = useAxios();\n    const [active, setActive] = useState(true);\n    const [loading, setLoading] = useState(true);\n    const [bids, setBids] = useState([]);\n    const [isUpdateTable, setIsUpdateTable] = useState(false);\n    const [open, setOpen] = useState(false);\n    const [searches, setSearches] = useState([]);\n    const [isSearch, setIsSearch] = useState(false);\n    const [previousData, setPreviousData] = useState(null);\n    const [checked, setChecked] = useState(false);\n    const [deleteData, setDeleteData] = useState(false);\n    const handleOpen = () => {\n        setPreviousData(null);\n        setOpen(true);\n    };\n    const handleClose = () => setOpen(false);\n\n    useEffect(() => {\n        // setLoading(true);\n        setLoading(false);\n        setBids([\n            {\n                bidName: 'Test Bids',\n                totalAmount: '50000',\n                startDate: '2/5/2022',\n                declarationDate: '5/6/2022',\n                totalTime: '30'\n            },\n            {\n                bidName: 'Test Bids2',\n                totalAmount: '50000',\n                startDate: '2/5/2022',\n                declarationDate: '5/6/2022',\n                totalTime: '30'\n            },\n            {\n                bidName: 'Test Bid3',\n                totalAmount: '50000',\n                startDate: '2/5/2022',\n                declarationDate: '5/6/2022',\n                totalTime: '30'\n            }\n        ]);\n\n        // axios\n        //     .get(`/customer`)\n        //     .then((response) => {\n        //         setLoading(false);\n        //         setBids(response.data.customerList);\n        //     })\n        //     .catch((err) => console.log(err));\n    }, [isUpdateTable]);\n\n    useEffect(() => {\n        /* eslint-disable no-underscore-dangle */\n        console.log(deleteData._id);\n        // axios\n        //     .delete(`/service/delete/${services[index]._id}`)\n        //     .then((response) => {\n        //         setLoading(false);\n        //         setServices(response.data.servicesList);\n        //         console.log(`Delete Successfully`);\n        //     })\n        //     .catch((err) => console.log(err));\n    }, [deleteData]);\n\n    const handleKeyUpSearch = (e) => {\n        setIsSearch(true);\n        console.log(bids, 'bids');\n        const data = bids.filter((b) => b?.bidName.toUpperCase().includes(e.target.value.toUpperCase()));\n        console.log(data, 'data');\n        setSearches(data);\n        if (e.target.value === '') setIsSearch(false);\n    };\n\n    const handleEdit = (index) => {\n        handleOpen();\n        setPreviousData(bids[index]);\n    };\n\n    const handleDelete = (index) => {\n        setDeleteData(bids[index]);\n    };\n\n    const data = isSearch ? searches : bids;\n    console.log(data, isSearch);\n\n    tableData = data?.map((bids, i) => ({\n        id: i + 1,\n        bidName: bids?.bidName,\n        totalAmount: bids?.totalAmount,\n        startDate: format(new Date(`${bids.startDate}`), 'yyyy-MM-dd'),\n        declarationDate: format(new Date(`${bids.declarationDate}`), 'yyyy-MM-dd'),\n        totalTime: bids?.totalTime,\n        action: (\n            <div className={classes.actionsContainer}>\n                <IconButton onClick={() => handleDelete(i)}>\n                    <IconTrash />\n                </IconButton>\n            </div>\n        )\n    }));\n\n    return (\n        <>\n            <div>\n                <SubCard\n                    title={loading ? <CircularProgress color=\"secondary\" /> : 'Upcoming Bids'}\n                    secondary={\n                        <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                            <TextField onKeyUp={handleKeyUpSearch} label=\"Search by Bid Name...\" color=\"secondary\" size=\"small\" />\n                        </Box>\n                    }\n                >\n                    {bids.length <= 0 ? (\n                        <Box\n                            sx={{\n                                display: 'flex',\n                                justifyContent: 'center',\n                                alignItems: 'center',\n                                p: 1,\n                                m: 1,\n                                bgcolor: 'background.paper',\n                                borderRadius: 1\n                            }}\n                        >\n                            <CircularProgress color=\"secondary\" />\n                        </Box>\n                    ) : (\n                        <CommonTable column={column} data={tableData} setBanner={setBids} setIsUpdateTable={setIsUpdateTable} />\n                    )}\n                </SubCard>\n            </div>\n        </>\n    );\n};\n\nexport default UpcomingBids;\n"],"sourceRoot":""}