{"version":3,"sources":["views/paymentGatewayReport/index.jsx"],"names":["tableData","column","useStyles","makeStyles","theme","actionsContainer","display","alignItems","justifyContent","PaymentGatewayReport","useAxios","useState","setLoading","report","setReport","isUpdateTable","setIsUpdateTable","searches","isSearch","useEffect","id","dateTime","userId","name","mobileNumber","amount","status","gatewayRedId","ip","data","console","log","map","i","pid","title","length","sx","p","m","bgcolor","borderRadius","color","setBanner"],"mappings":"6PAcIA,EAAY,GACVC,EAAS,CAAC,SAAU,KAAM,cAAe,UAAW,OAAQ,gBAAiB,SAAU,SAAU,iBAAkB,MAEnHC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,iBAAkB,CACdC,QAAS,OACTC,WAAY,SACZC,eAAgB,OAJK,IAwHdC,UAhHc,WACTP,IACFQ,cADd,IAEA,EAA4BC,oBAAS,GAArC,mBACA,GADA,UAC8BA,oBAAS,IAAvC,mBAAgBC,GAAhB,WACA,EAA4BD,mBAAS,IAArC,mBAAOE,EAAP,KAAeC,EAAf,KACA,EAA0CH,oBAAS,GAAnD,mBAAOI,EAAP,KAAsBC,EAAtB,KACA,EAAwBL,oBAAS,GAAjC,mBACA,GADA,UACgCA,mBAAS,KAAzC,mBAAOM,EAAP,KACA,GADA,KACgCN,oBAAS,IAAzC,mBAAOO,EAAP,KACA,GADA,KACwCP,mBAAS,CAAC,QAAlD,mBACA,GADA,UAC8BA,oBAAS,IAAvC,6BAQAQ,qBAAU,WAENP,GAAW,GACXE,EAAU,CACN,CACIM,GAAI,MACJC,SAAU,sBACVC,OAAQ,SACRC,KAAM,QACNC,aAAc,aACdC,OAAQ,OACRC,OAAQ,SACRC,aAAc,OACdC,GAAI,eAER,CACIR,GAAI,MACJC,SAAU,sBACVC,OAAQ,SACRC,KAAM,QACNC,aAAc,aACdC,OAAQ,OACRC,OAAQ,SACRC,aAAc,OACdC,GAAI,eAER,CACIR,GAAI,MACJC,SAAU,sBACVC,OAAQ,SACRC,KAAM,QACNC,aAAc,aACdC,OAAQ,OACRC,OAAQ,SACRC,aAAc,OACdC,GAAI,gBAWf,GAAE,CAACb,IAEJ,IAAMc,EAAOX,EAAWD,EAAWJ,EAgBnC,OAfAiB,QAAQC,IAAIF,EAAMX,GAElBlB,EAAS,OAAG6B,QAAH,IAAGA,OAAH,EAAGA,EAAMG,KAAI,SAACnB,EAAQoB,GAAT,MAAgB,CAClCb,GAAIa,EAAI,EACRC,IAAG,OAAErB,QAAF,IAAEA,OAAF,EAAEA,EAAQO,GACbC,SAAQ,OAAER,QAAF,IAAEA,OAAF,EAAEA,EAAQQ,SAClBC,OAAM,OAAET,QAAF,IAAEA,OAAF,EAAEA,EAAQS,OAChBC,KAAI,OAAEV,QAAF,IAAEA,OAAF,EAAEA,EAAQU,KACdC,aAAY,OAAEX,QAAF,IAAEA,OAAF,EAAEA,EAAQW,aACtBC,OAAM,OAAEZ,QAAF,IAAEA,OAAF,EAAEA,EAAQY,OAChBC,OAAM,OAAEb,QAAF,IAAEA,OAAF,EAAEA,EAAQa,OAChBC,aAAY,OAAEd,QAAF,IAAEA,OAAF,EAAEA,EAAQc,aACtBC,GAAE,OAAEf,QAAF,IAAEA,OAAF,EAAEA,EAAQe,GAVM,IAclB,mCACI,8BACI,cAAC,IAAD,CAAUO,MAAM,yBAAhB,SACI,cAAC,IAAD,UACKtB,EAAOuB,QAAU,EACd,cAAC,IAAD,CACIC,GAAI,CACA/B,QAAS,OACTE,eAAgB,SAChBD,WAAY,SACZ+B,EAAG,EACHC,EAAG,EACHC,QAAS,mBACTC,aAAc,GARtB,SAWI,cAAC,IAAD,CAAkBC,MAAM,gBAG5B,cAAC,IAAD,CAAazC,OAAQA,EAAQ4B,KAAM7B,EAAW2C,UAAW7B,EAAWE,iBAAkBA,WAOjH,C","file":"static/js/22.b5967d9f.chunk.js","sourcesContent":["/* eslint-disable no-underscore-dangle */\nimport { useEffect, useState } from 'react';\nimport { Box, Button, CircularProgress, IconButton, Switch, FormControl, Select, MenuItem, TextField } from '@mui/material';\nimport { IconEdit, IconTrash, IconPlus } from '@tabler/icons';\nimport { format } from 'date-fns';\n\nimport config from 'config';\nimport MainCard from 'ui-component/cards/MainCard';\nimport SubCard from 'ui-component/cards/SubCard';\nimport CommonTable from 'ui-component/Table/CommonTable';\nimport DropDown from 'ui-component/Table/CustomDropDown';\nimport { makeStyles } from '@mui/styles';\nimport { useAxios } from 'hooks';\n\nlet tableData = [];\nconst column = ['Sl. No', 'ID', 'Date & Time', 'User ID', 'Name', 'Mobile Number', 'Amount', 'Status', 'Gateway Ref ID', 'IP'];\n\nconst useStyles = makeStyles((theme) => ({\n    actionsContainer: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'end'\n    }\n}));\n\nconst PaymentGatewayReport = () => {\n    const classes = useStyles();\n    const axios = useAxios();\n    const [active, setActive] = useState(true);\n    const [loading, setLoading] = useState(true);\n    const [report, setReport] = useState([]);\n    const [isUpdateTable, setIsUpdateTable] = useState(false);\n    const [open, setOpen] = useState(false);\n    const [searches, setSearches] = useState([]);\n    const [isSearch, setIsSearch] = useState(false);\n    const [previousData, setPreviousData] = useState([null]);\n    const [checked, setChecked] = useState(false);\n\n    const handleOpen = () => {\n        setPreviousData(null);\n        setOpen(true);\n    };\n    const handleClose = () => setOpen(false);\n\n    useEffect(() => {\n        // setLoading(true);\n        setLoading(false);\n        setReport([\n            {\n                id: '123',\n                dateTime: '12/12/2022 11:00 PM',\n                userId: 'Abc123',\n                name: 'Medha',\n                mobileNumber: '1234567890',\n                amount: '1234',\n                status: 'active',\n                gatewayRedId: '1234',\n                ip: '10.19.18.17'\n            },\n            {\n                id: '123',\n                dateTime: '12/12/2022 11:00 PM',\n                userId: 'Abc123',\n                name: 'Medha',\n                mobileNumber: '1234567890',\n                amount: '1234',\n                status: 'active',\n                gatewayRedId: '1234',\n                ip: '10.19.18.17'\n            },\n            {\n                id: '123',\n                dateTime: '12/12/2022 11:00 PM',\n                userId: 'Abc123',\n                name: 'Medha',\n                mobileNumber: '1234567890',\n                amount: '1234',\n                status: 'active',\n                gatewayRedId: '1234',\n                ip: '10.19.18.17'\n            }\n        ]);\n\n        // axios\n        //     .get(`/customer`)\n        //     .then((response) => {\n        //         setLoading(false);\n        //         setReport(response.data.customerList);\n        //     })\n        //     .catch((err) => console.log(err));\n    }, [isUpdateTable]);\n\n    const data = isSearch ? searches : report;\n    console.log(data, isSearch);\n\n    tableData = data?.map((report, i) => ({\n        id: i + 1,\n        pid: report?.id,\n        dateTime: report?.dateTime,\n        userId: report?.userId,\n        name: report?.name,\n        mobileNumber: report?.mobileNumber,\n        amount: report?.amount,\n        status: report?.status,\n        gatewayRedId: report?.gatewayRedId,\n        ip: report?.ip\n    }));\n\n    return (\n        <>\n            <div>\n                <MainCard title=\"Payment Gateway Report\">\n                    <SubCard>\n                        {report.length <= 0 ? (\n                            <Box\n                                sx={{\n                                    display: 'flex',\n                                    justifyContent: 'center',\n                                    alignItems: 'center',\n                                    p: 1,\n                                    m: 1,\n                                    bgcolor: 'background.paper',\n                                    borderRadius: 1\n                                }}\n                            >\n                                <CircularProgress color=\"secondary\" />\n                            </Box>\n                        ) : (\n                            <CommonTable column={column} data={tableData} setBanner={setReport} setIsUpdateTable={setIsUpdateTable} />\n                        )}\n                    </SubCard>\n                </MainCard>\n            </div>\n        </>\n    );\n};\n\nexport default PaymentGatewayReport;\n"],"sourceRoot":""}