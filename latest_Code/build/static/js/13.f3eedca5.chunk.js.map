{"version":3,"sources":["../node_modules/@mui/icons-material/ReplySharp.js","views/askToExpert/Answer.jsx","views/askToExpert/index.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","style","position","top","left","maxWidth","maxHeight","overflow","transform","minWidth","bgcolor","borderRadius","boxShadow","p","validationSchema","Yup","answer","required","Answer","handleClose","open","setIsUpdateTable","previousData","axios","useAxios","useState","initialValues","setInitialValues","useEffect","Modal","onClose","Box","sx","enableReinitialize","onSubmit","values","form","options","headers","post","response","console","log","swal","data","message","icon","prevState","setTimeout","handleBlur","handleChange","errors","handleSubmit","isSubmitting","touched","SubCard","title","question","Grid","container","spacing","item","xs","md","TextField","name","error","onChange","onBlur","helperText","fullWidth","id","label","variant","color","Divider","mt","mx","display","justifyContent","alignItems","Button","onClick","startIcon","endIcon","disabled","tableData","column","useStyles","makeStyles","theme","actionsContainer","AskToExpert","classes","loading","setLoading","askToExpert","setAskToExpert","isUpdateTable","setOpen","searches","isSearch","setPreviousData","qdate","adate","handleReply","index","map","i","action","className","CircularProgress","length","m","CommonTable","setBanner"],"mappings":"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","file":"static/js/13.f3eedca5.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M10 9V5l-7 7 7 7v-4.1c5 0 8.5 1.6 11 5.1-1-5-4-10-11-11z\"\n}), 'ReplySharp');\n\nexports.default = _default;","/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable react/prop-types */\nimport { Button, Divider, Grid, TextField, Switch, Typography } from '@mui/material';\nimport Box from '@mui/material/Box';\nimport Modal from '@mui/material/Modal';\nimport { IconArrowRight, IconX } from '@tabler/icons';\nimport { useAxios } from 'hooks';\nimport { useEffect, useState } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport swal from 'sweetalert';\nimport SubCard from 'ui-component/cards/SubCard';\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    maxWidth: '98%',\n    maxHeight: '90vh',\n    overflow: 'auto',\n    transform: 'translate(-50%, -50%)',\n    minWidth: '50%',\n    bgcolor: 'background.paper',\n    borderRadius: '15px',\n    boxShadow: 24,\n    p: 4\n};\n\nconst validationSchema = Yup.object({\n    answer: Yup.string().required('Answer is required')\n});\n\nconst Answer = ({ handleClose, open, setIsUpdateTable, previousData }) => {\n    const axios = useAxios();\n    const [initialValues, setInitialValues] = useState({});\n\n    useEffect(() => {\n        setInitialValues(previousData);\n    }, [previousData]);\n\n    return (\n        <>\n            <Modal open={open} onClose={handleClose} aria-labelledby=\"modal-modal-title\" aria-describedby=\"modal-modal-description\">\n                <Box sx={style}>\n                    <Formik\n                        initialValues={initialValues}\n                        validationSchema={validationSchema}\n                        enableReinitialize\n                        onSubmit={async (values, form) => {\n                            try {\n                                const options = {\n                                    headers: { 'Access-Control-Allow-Origin': '' }\n                                };\n                                const response = await axios.post(`/customer/register`, values, options);\n                                console.log(response, 'response');\n                                swal(response.data.message, { icon: 'success' });\n                                setIsUpdateTable((prevState) => !prevState);\n                                setTimeout(() => {\n                                    handleClose();\n                                }, 1000);\n                            } catch (err) {\n                                swal(err.response.data.message || 'Something went wrong');\n                            }\n                        }}\n                    >\n                        {({ handleBlur, handleChange, values, errors, handleSubmit, isSubmitting, touched }) => (\n                            <SubCard title={previousData.question}>\n                                <Grid container spacing={1}>\n                                    <Grid item xs={12} md={12}>\n                                        <TextField\n                                            name=\"answer\"\n                                            error={errors.answer}\n                                            onChange={handleChange('answer')}\n                                            onBlur={() => handleBlur('answer')}\n                                            helperText={errors.answer}\n                                            fullWidth\n                                            value={values.answer}\n                                            id=\"answer\"\n                                            label=\"Write Your Answer *\"\n                                            variant=\"outlined\"\n                                            color=\"secondary\"\n                                        />\n                                    </Grid>\n                                </Grid>\n                                <Divider />\n                                <Box sx={{ mt: 4, mx: 2, display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                                    <Button onClick={handleClose} variant=\"outlined\" startIcon={<IconX />} color=\"secondary\">\n                                        Cancel\n                                    </Button>\n                                    <Button\n                                        onClick={handleSubmit}\n                                        variant=\"contained\"\n                                        endIcon={<IconArrowRight />}\n                                        color=\"secondary\"\n                                        disabled={isSubmitting}\n                                    >\n                                        Submit\n                                    </Button>\n                                </Box>\n                            </SubCard>\n                        )}\n                    </Formik>\n                </Box>\n            </Modal>\n        </>\n    );\n};\n\nexport default Answer;\n","/* eslint-disable no-underscore-dangle */\nimport { useEffect, useState } from 'react';\nimport { Box, Button, CircularProgress, IconButton, Switch, FormControl, Select, MenuItem, TextField } from '@mui/material';\nimport { IconUserCheck, IconBuildingBank, IconLicense, IconEdit } from '@tabler/icons';\nimport ReplySharpIcon from '@mui/icons-material/ReplySharp';\nimport { format } from 'date-fns';\nimport { NavLink } from 'react-router-dom';\nimport config from 'config';\nimport SubCard from 'ui-component/cards/SubCard';\nimport CommonTable from 'ui-component/Table/CommonTable';\nimport DropDown from 'ui-component/Table/CustomDropDown';\nimport Answer from './Answer';\nimport { makeStyles } from '@mui/styles';\nimport { useAxios } from 'hooks';\n\nlet tableData = [];\nconst column = ['Sl. No', 'Questions', 'Question Posted Date', 'Answer', 'Answer Posted Date', 'Actions'];\n\nconst useStyles = makeStyles((theme) => ({\n    actionsContainer: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'end'\n    }\n}));\n\nconst AskToExpert = () => {\n    const classes = useStyles();\n    const axios = useAxios();\n    const [active, setActive] = useState(true);\n    const [loading, setLoading] = useState(true);\n    const [askToExpert, setAskToExpert] = useState([]);\n    const [isUpdateTable, setIsUpdateTable] = useState(false);\n    const [open, setOpen] = useState('');\n    const [searches, setSearches] = useState([]);\n    const [isSearch, setIsSearch] = useState(false);\n    const [previousData, setPreviousData] = useState(null);\n    const [page, setPage] = useState('');\n    const handleOpen = () => {\n        setPreviousData(null);\n        setOpen(true);\n    };\n    const handleClose = () => setOpen(false);\n\n    useEffect(() => {\n        // setLoading(true);\n        setLoading(false);\n        setAskToExpert([\n            {\n                question: 'What is bids jhj gujh gjgj ?',\n                qdate: '12/12/2022',\n                answer: 'jhckj dchjksdh cksdhcjksdhkjhs',\n                adate: '12/12/2022'\n            },\n            {\n                question: 'kjhkjd jhd',\n                qdate: '12/12/2022'\n            }\n        ]);\n\n        // axios\n        //     .get(`/askToExpert`)\n        //     .then((response) => {\n        //         setLoading(false);\n        //         setAskToExpert(response.data.customerList);\n        //     })\n        //     .catch((err) => console.log(err));\n    }, [isUpdateTable]);\n\n    const handleKeyUpSearch = (e) => {\n        setIsSearch(true);\n        console.log(askToExpert, 'askToExpert');\n        const data = askToExpert.filter((b) => b?.name.toUpperCase().includes(e.target.value.toUpperCase()));\n        console.log(data, 'data');\n        setSearches(data);\n        if (e.target.value === '') setIsSearch(false);\n    };\n\n    const handleActive = (e) => {\n        let active = false;\n        if (e.target.value === 'active') active = true;\n\n        setActive(e.target.value);\n        setIsSearch(true);\n        // eslint-disable-next-line eqeqeq\n        const data = askToExpert.filter((b) => active === b.active);\n        console.log(data, askToExpert, e.target.value, 'data');\n        setSearches(data);\n        if (!e.target.value) setIsSearch(false);\n    };\n\n    const data = isSearch ? searches : askToExpert;\n    console.log(data, isSearch);\n\n    const handleReply = (index) => {\n        handleOpen();\n        setPreviousData(askToExpert[index]);\n    };\n\n    tableData = data?.map((askToExpert, i) => ({\n        id: i + 1,\n        question: askToExpert?.question,\n        qdate: askToExpert?.qdate,\n        answer: askToExpert?.answer,\n        adate: askToExpert?.adate,\n        action: (\n            <div className={classes.actionsContainer}>\n                <Button title=\"Reply\" variant=\"contained\" color=\"secondary\" startIcon={<ReplySharpIcon />} onClick={() => handleReply(i)}>\n                    Reply\n                </Button>\n            </div>\n        )\n    }));\n\n    return (\n        <>\n            <div>\n                <SubCard title={loading ? <CircularProgress color=\"secondary\" /> : 'Ask to Expert'}>\n                    {askToExpert.length <= 0 ? (\n                        <Box\n                            sx={{\n                                display: 'flex',\n                                justifyContent: 'center',\n                                alignItems: 'center',\n                                p: 1,\n                                m: 1,\n                                bgcolor: 'background.paper',\n                                borderRadius: 1\n                            }}\n                        >\n                            <CircularProgress color=\"secondary\" />\n                        </Box>\n                    ) : (\n                        <CommonTable column={column} data={tableData} setBanner={setAskToExpert} setIsUpdateTable={setIsUpdateTable} />\n                    )}\n                </SubCard>\n                <Answer handleClose={handleClose} open={open} setIsUpdateTable={setIsUpdateTable} previousData={previousData} />\n            </div>\n        </>\n    );\n};\n\nexport default AskToExpert;\n"],"sourceRoot":""}