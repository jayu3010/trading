{"version":3,"sources":["../node_modules/@mui/material/internal/switchBaseClasses.js","../node_modules/@mui/material/internal/SwitchBase.js","../node_modules/@mui/material/Switch/switchClasses.js","../node_modules/@mui/material/Switch/Switch.js","views/customers/EditCustomer.jsx","views/customers/Kyc/DeclineKyc.jsx","views/customers/Kyc/kyc.jsx","views/customers/Bank/EditBank.jsx","views/customers/Bank/Bank.jsx","views/customers/Agreement/EditAgreement.jsx","views/customers/Agreement/Agreement.jsx","views/customers/index.jsx"],"names":["getSwitchBaseUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","SwitchBaseRoot","styled","ButtonBase","ownerState","_extends","padding","borderRadius","edge","marginLeft","size","marginRight","SwitchBaseInput","cursor","position","opacity","width","height","top","left","margin","zIndex","SwitchBase","React","props","ref","autoFocus","checkedProp","checked","checkedIcon","className","defaultChecked","disabledProp","disabled","disableFocusRipple","icon","id","inputProps","inputRef","name","onBlur","onChange","onFocus","readOnly","required","tabIndex","type","value","other","_objectWithoutPropertiesLoose","useControlled","controlled","default","Boolean","state","setCheckedState","muiFormControl","useFormControl","hasLabelFor","classes","slots","root","capitalize","input","composeClasses","useUtilityClasses","_jsxs","component","clsx","centerRipple","focusRipple","role","undefined","event","children","_jsx","nativeEvent","defaultPrevented","newChecked","target","getSwitchUtilityClass","switchClasses","SwitchRoot","overridesResolver","styles","display","overflow","boxSizing","flexShrink","verticalAlign","colorAdjust","thumb","switchBase","transform","SwitchSwitchBase","color","theme","vars","palette","Switch","defaultColor","mode","common","white","grey","transition","transitions","create","duration","shortest","defaultDisabledColor","track","switchTrackDisabled","backgroundColor","action","activeChannel","hoverOpacity","alpha","active","main","mainChannel","lighten","darken","SwitchTrack","onBackground","black","switchTrack","SwitchThumb","boxShadow","shadows","inProps","useThemeProps","sx","composedClasses","style","maxWidth","maxHeight","minWidth","bgcolor","p","validationSchema","Yup","tableId","memberId","referredBy","email","username","contactNumber","matches","min","max","EditCustomer","handleClose","open","setIsUpdateTable","previousData","axios","useAxios","useState","initialValues","setInitialValues","useEffect","Modal","onClose","Box","enableReinitialize","onSubmit","values","form","options","headers","post","response","console","log","swal","data","message","prevState","setTimeout","handleBlur","handleChange","errors","handleSubmit","isSubmitting","touched","SubCard","title","Grid","container","spacing","item","xs","md","TextField","error","helperText","fullWidth","label","variant","address","city","pincode","regDateTime","updateDateTime","ip","geolocation","Divider","mt","mx","justifyContent","alignItems","Button","onClick","startIcon","endIcon","declineReason","DeclineKyc","tableData","column","useStyles","makeStyles","actionsContainer","KYC","kyc","page","customers","setCustomers","openKyc","setOpenKyc","previousDataKyc","setPreviousDataKyc","statusKyc","setStatusKyc","handleDecline","index","push","map","customer","i","aadharNo","aadhar","number","imageLinkOne","panNo","pan","imageLink","check","bank","fileLink","IconButton","length","m","CircularProgress","CommonTable","setBanner","bankName","ifscCode","branchName","accountNumber","EditBank","Bank","setLoading","isSearch","isUpdateTable","searches","previousDataBank","setPreviousDataBank","openBank","setOpenBank","bidder","_id","then","res","details","catch","err","handleEdit","ifsc","branch","agreementId","url","signDate","EditAgreement","Agreement","previousDataAgreement","setPreviousDataAgreement","openAgreement","setOpenAgreement","Customers","setActive","loading","setKyc","setOpen","setSearches","setIsSearch","setPreviousData","setPage","handleOpen","get","bidderList","fullname","joiningDate","format","Date","createdAt","status","handleActiveChange","secondary","onKeyUp","e","filter","b","toUpperCase","includes","FormControl","Select","displayEmpty","MenuItem"],"mappings":"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","file":"static/js/10.6516f153.chunk.js","sourcesContent":["import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getSwitchBaseUtilityClass(slot) {\n  return generateUtilityClass('PrivateSwitchBase', slot);\n}\nconst switchBaseClasses = generateUtilityClasses('PrivateSwitchBase', ['root', 'checked', 'disabled', 'input', 'edgeStart', 'edgeEnd']);\nexport default switchBaseClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"checked\", \"checkedIcon\", \"className\", \"defaultChecked\", \"disabled\", \"disableFocusRipple\", \"edge\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport ButtonBase from '../ButtonBase';\nimport { getSwitchBaseUtilityClass } from './switchBaseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    checked,\n    disabled,\n    edge\n  } = ownerState;\n  const slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', edge && `edge${capitalize(edge)}`],\n    input: ['input']\n  };\n  return composeClasses(slots, getSwitchBaseUtilityClass, classes);\n};\n\nconst SwitchBaseRoot = styled(ButtonBase)(({\n  ownerState\n}) => _extends({\n  padding: 9,\n  borderRadius: '50%'\n}, ownerState.edge === 'start' && {\n  marginLeft: ownerState.size === 'small' ? -3 : -12\n}, ownerState.edge === 'end' && {\n  marginRight: ownerState.size === 'small' ? -3 : -12\n}));\nconst SwitchBaseInput = styled('input')({\n  cursor: 'inherit',\n  position: 'absolute',\n  opacity: 0,\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0,\n  margin: 0,\n  padding: 0,\n  zIndex: 1\n});\n/**\n * @ignore - internal component.\n */\n\nconst SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  const {\n    autoFocus,\n    checked: checkedProp,\n    checkedIcon,\n    className,\n    defaultChecked,\n    disabled: disabledProp,\n    disableFocusRipple = false,\n    edge = false,\n    icon,\n    id,\n    inputProps,\n    inputRef,\n    name,\n    onBlur,\n    onChange,\n    onFocus,\n    readOnly,\n    required,\n    tabIndex,\n    type,\n    value\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [checked, setCheckedState] = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  });\n  const muiFormControl = useFormControl();\n\n  const handleFocus = event => {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  const handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  const handleInputChange = event => {\n    // Workaround for https://github.com/facebook/react/issues/9023\n    if (event.nativeEvent.defaultPrevented) {\n      return;\n    }\n\n    const newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v6: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  let disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  const hasLabelFor = type === 'checkbox' || type === 'radio';\n\n  const ownerState = _extends({}, props, {\n    checked,\n    disabled,\n    disableFocusRipple,\n    edge\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(SwitchBaseRoot, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(SwitchBaseInput, _extends({\n      autoFocus: autoFocus,\n      checked: checkedProp,\n      defaultChecked: defaultChecked,\n      className: classes.input,\n      disabled: disabled,\n      id: hasLabelFor && id,\n      name: name,\n      onChange: handleInputChange,\n      readOnly: readOnly,\n      ref: inputRef,\n      required: required,\n      ownerState: ownerState,\n      tabIndex: tabIndex,\n      type: type\n    }, type === 'checkbox' && value === undefined ? {} : {\n      value\n    }, inputProps)), checked ? checkedIcon : icon]\n  }));\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default SwitchBase;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getSwitchUtilityClass(slot) {\n  return generateUtilityClass('MuiSwitch', slot);\n}\nconst switchClasses = generateUtilityClasses('MuiSwitch', ['root', 'edgeStart', 'edgeEnd', 'switchBase', 'colorPrimary', 'colorSecondary', 'sizeSmall', 'sizeMedium', 'checked', 'disabled', 'input', 'thumb', 'track']);\nexport default switchClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"edge\", \"size\", \"sx\"];\n// @inheritedComponent IconButton\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha, darken, lighten } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport switchClasses, { getSwitchUtilityClass } from './switchClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    edge,\n    size,\n    color,\n    checked,\n    disabled\n  } = ownerState;\n  const slots = {\n    root: ['root', edge && `edge${capitalize(edge)}`, `size${capitalize(size)}`],\n    switchBase: ['switchBase', `color${capitalize(color)}`, checked && 'checked', disabled && 'disabled'],\n    thumb: ['thumb'],\n    track: ['track'],\n    input: ['input']\n  };\n  const composedClasses = composeClasses(slots, getSwitchUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst SwitchRoot = styled('span', {\n  name: 'MuiSwitch',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.edge && styles[`edge${capitalize(ownerState.edge)}`], styles[`size${capitalize(ownerState.size)}`]];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'inline-flex',\n  width: 34 + 12 * 2,\n  height: 14 + 12 * 2,\n  overflow: 'hidden',\n  padding: 12,\n  boxSizing: 'border-box',\n  position: 'relative',\n  flexShrink: 0,\n  zIndex: 0,\n  // Reset the stacking context.\n  verticalAlign: 'middle',\n  // For correct alignment with the text.\n  '@media print': {\n    colorAdjust: 'exact'\n  }\n}, ownerState.edge === 'start' && {\n  marginLeft: -8\n}, ownerState.edge === 'end' && {\n  marginRight: -8\n}, ownerState.size === 'small' && {\n  width: 40,\n  height: 24,\n  padding: 7,\n  [`& .${switchClasses.thumb}`]: {\n    width: 16,\n    height: 16\n  },\n  [`& .${switchClasses.switchBase}`]: {\n    padding: 4,\n    [`&.${switchClasses.checked}`]: {\n      transform: 'translateX(16px)'\n    }\n  }\n}));\nconst SwitchSwitchBase = styled(SwitchBase, {\n  name: 'MuiSwitch',\n  slot: 'SwitchBase',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.switchBase, {\n      [`& .${switchClasses.input}`]: styles.input\n    }, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme\n}) => ({\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  zIndex: 1,\n  // Render above the focus ripple.\n  color: theme.vars ? theme.vars.palette.Switch.defaultColor : `${theme.palette.mode === 'light' ? theme.palette.common.white : theme.palette.grey[300]}`,\n  transition: theme.transitions.create(['left', 'transform'], {\n    duration: theme.transitions.duration.shortest\n  }),\n  [`&.${switchClasses.checked}`]: {\n    transform: 'translateX(20px)'\n  },\n  [`&.${switchClasses.disabled}`]: {\n    color: theme.vars ? theme.vars.palette.Switch.defaultDisabledColor : `${theme.palette.mode === 'light' ? theme.palette.grey[100] : theme.palette.grey[600]}`\n  },\n  [`&.${switchClasses.checked} + .${switchClasses.track}`]: {\n    opacity: 0.5\n  },\n  [`&.${switchClasses.disabled} + .${switchClasses.track}`]: {\n    opacity: theme.vars ? theme.vars.opacity.switchTrackDisabled : `${theme.palette.mode === 'light' ? 0.12 : 0.2}`\n  },\n  [`& .${switchClasses.input}`]: {\n    left: '-100%',\n    width: '300%'\n  }\n}), ({\n  theme,\n  ownerState\n}) => _extends({\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.action.activeChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette.action.active, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${switchClasses.checked}`]: {\n    color: (theme.vars || theme).palette[ownerState.color].main,\n    '&:hover': {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette[ownerState.color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    },\n    [`&.${switchClasses.disabled}`]: {\n      color: theme.vars ? theme.vars.palette.Switch[`${ownerState.color}DisabledColor`] : `${theme.palette.mode === 'light' ? lighten(theme.palette[ownerState.color].main, 0.62) : darken(theme.palette[ownerState.color].main, 0.55)}`\n    }\n  },\n  [`&.${switchClasses.checked} + .${switchClasses.track}`]: {\n    backgroundColor: (theme.vars || theme).palette[ownerState.color].main\n  }\n}));\nconst SwitchTrack = styled('span', {\n  name: 'MuiSwitch',\n  slot: 'Track',\n  overridesResolver: (props, styles) => styles.track\n})(({\n  theme\n}) => ({\n  height: '100%',\n  width: '100%',\n  borderRadius: 14 / 2,\n  zIndex: -1,\n  transition: theme.transitions.create(['opacity', 'background-color'], {\n    duration: theme.transitions.duration.shortest\n  }),\n  backgroundColor: theme.vars ? theme.vars.palette.common.onBackground : `${theme.palette.mode === 'light' ? theme.palette.common.black : theme.palette.common.white}`,\n  opacity: theme.vars ? theme.vars.opacity.switchTrack : `${theme.palette.mode === 'light' ? 0.38 : 0.3}`\n}));\nconst SwitchThumb = styled('span', {\n  name: 'MuiSwitch',\n  slot: 'Thumb',\n  overridesResolver: (props, styles) => styles.thumb\n})(({\n  theme\n}) => ({\n  boxShadow: (theme.vars || theme).shadows[1],\n  backgroundColor: 'currentColor',\n  width: 20,\n  height: 20,\n  borderRadius: '50%'\n}));\nconst Switch = /*#__PURE__*/React.forwardRef(function Switch(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSwitch'\n  });\n\n  const {\n    className,\n    color = 'primary',\n    edge = false,\n    size = 'medium',\n    sx\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    color,\n    edge,\n    size\n  });\n\n  const classes = useUtilityClasses(ownerState);\n\n  const icon = /*#__PURE__*/_jsx(SwitchThumb, {\n    className: classes.thumb,\n    ownerState: ownerState\n  });\n\n  return /*#__PURE__*/_jsxs(SwitchRoot, {\n    className: clsx(classes.root, className),\n    sx: sx,\n    ownerState: ownerState,\n    children: [/*#__PURE__*/_jsx(SwitchSwitchBase, _extends({\n      type: \"checkbox\",\n      icon: icon,\n      checkedIcon: icon,\n      ref: ref,\n      ownerState: ownerState\n    }, other, {\n      classes: _extends({}, classes, {\n        root: classes.switchBase\n      })\n    })), /*#__PURE__*/_jsx(SwitchTrack, {\n      className: classes.track,\n      ownerState: ownerState\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense switch styling.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Switch;","/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable react/prop-types */\nimport { Button, Divider, Grid, TextField, Switch, Typography } from '@mui/material';\nimport Box from '@mui/material/Box';\nimport Modal from '@mui/material/Modal';\nimport { IconArrowRight, IconX } from '@tabler/icons';\nimport { useAxios } from 'hooks';\nimport { useEffect, useState } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport swal from 'sweetalert';\nimport SubCard from 'ui-component/cards/SubCard';\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    maxWidth: '98%',\n    maxHeight: '90vh',\n    overflow: 'auto',\n    transform: 'translate(-50%, -50%)',\n    minWidth: '50%',\n    bgcolor: 'background.paper',\n    borderRadius: '15px',\n    boxShadow: 24,\n    p: 4\n};\n\nconst phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\n\nconst validationSchema = Yup.object({\n    tableId: Yup.string().required('Table Id is required'),\n    memberId: Yup.string().required('Member Id is required'),\n    referredBy: Yup.string().required('Referred By is required'),\n    name: Yup.string().required('Name is required'),\n    email: Yup.string().email('Invalid Email').required('Email is required'),\n    username: Yup.string().required('Username is required'),\n    contactNumber: Yup.string()\n        .required('required')\n        .matches(phoneRegExp, 'Phone number is not valid')\n        .min(10, 'to short')\n        .max(10, 'to long')\n});\n\nconst EditCustomer = ({ handleClose, open, setIsUpdateTable, previousData }) => {\n    const axios = useAxios();\n    const [initialValues, setInitialValues] = useState({});\n\n    useEffect(() => {\n        setInitialValues(previousData);\n    }, [previousData]);\n\n    return (\n        <>\n            <Modal open={open} onClose={handleClose} aria-labelledby=\"modal-modal-title\" aria-describedby=\"modal-modal-description\">\n                <Box sx={style}>\n                    <Formik\n                        initialValues={initialValues}\n                        validationSchema={validationSchema}\n                        enableReinitialize\n                        onSubmit={async (values, form) => {\n                            try {\n                                const options = {\n                                    headers: { 'Access-Control-Allow-Origin': '' }\n                                };\n                                const response = await axios.post(`/customer/register`, values, options);\n                                console.log(response, 'response');\n                                swal(response.data.message, { icon: 'success' });\n                                setIsUpdateTable((prevState) => !prevState);\n                                setTimeout(() => {\n                                    handleClose();\n                                }, 1000);\n                            } catch (err) {\n                                swal(err.response.data.message || 'Something went wrong');\n                            }\n                        }}\n                    >\n                        {({ handleBlur, handleChange, values, errors, handleSubmit, isSubmitting, touched }) => (\n                            <SubCard title=\"Edit Customer\">\n                                <Grid container spacing={2}>\n                                    <Grid item xs={12} md={6}>\n                                        <TextField\n                                            name=\"tableId\"\n                                            error={errors.tableId}\n                                            onChange={handleChange('tableId')}\n                                            onBlur={() => handleBlur('tableId')}\n                                            helperText={errors.tableId}\n                                            fullWidth\n                                            value={values.tableId}\n                                            id=\"tableId\"\n                                            label=\"Table Id *\"\n                                            variant=\"outlined\"\n                                            color=\"secondary\"\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} md={6}>\n                                        <TextField\n                                            name=\"memberId\"\n                                            error={errors.memberId}\n                                            onChange={handleChange('memberId')}\n                                            onBlur={() => handleBlur('memberId')}\n                                            helperText={errors.memberId}\n                                            fullWidth\n                                            value={values.memberId}\n                                            id=\"memberId\"\n                                            label=\"Member Id *\"\n                                            variant=\"outlined\"\n                                            color=\"secondary\"\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} md={6}>\n                                        <TextField\n                                            name=\"referredBy\"\n                                            error={errors.referredBy}\n                                            onChange={handleChange('referredBy')}\n                                            onBlur={() => handleBlur('referredBy')}\n                                            helperText={errors.referredBy}\n                                            fullWidth\n                                            value={values.referredBy}\n                                            id=\"referredBy\"\n                                            label=\"Referred By *\"\n                                            variant=\"outlined\"\n                                            color=\"secondary\"\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} md={6}>\n                                        <TextField\n                                            name=\"name\"\n                                            error={errors.name}\n                                            onChange={handleChange('name')}\n                                            onBlur={() => handleBlur('name')}\n                                            helperText={errors.name}\n                                            fullWidth\n                                            value={values.name}\n                                            id=\"name\"\n                                            label=\"Name*\"\n                                            variant=\"outlined\"\n                                            color=\"secondary\"\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} md={6}>\n                                        <TextField\n                                            name=\"email\"\n                                            error={errors.email}\n                                            onChange={handleChange('email')}\n                                            onBlur={() => handleBlur('email')}\n                                            helperText={errors.email}\n                                            fullWidth\n                                            value={values.email}\n                                            id=\"email\"\n                                            label=\"Email id *\"\n                                            variant=\"outlined\"\n                                            color=\"secondary\"\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} md={6}>\n                                        <TextField\n                                            name=\"contactNumber\"\n                                            error={errors.contactNumber}\n                                            onChange={handleChange('contactNumber')}\n                                            onBlur={() => handleBlur('contactNumber')}\n                                            helperText={errors.contactNumber}\n                                            fullWidth\n                                            value={values.contactNumber}\n                                            id=\"contactNumber\"\n                                            label=\"Contact Number *\"\n                                            variant=\"outlined\"\n                                            color=\"secondary\"\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} md={6}>\n                                        <TextField\n                                            name=\"address\"\n                                            error={errors.address}\n                                            onChange={handleChange('address')}\n                                            onBlur={() => handleBlur('address')}\n                                            helperText={errors.address}\n                                            fullWidth\n                                            value={values.address}\n                                            id=\"address\"\n                                            label=\"Address *\"\n                                            variant=\"outlined\"\n                                            color=\"secondary\"\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} md={6}>\n                                        <TextField\n                                            name=\"state\"\n                                            error={errors.state}\n                                            onChange={handleChange('state')}\n                                            onBlur={() => handleBlur('state')}\n                                            helperText={errors.state}\n                                            fullWidth\n                                            value={values.state}\n                                            id=\"state\"\n                                            label=\"State *\"\n                                            variant=\"outlined\"\n                                            color=\"secondary\"\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} md={6}>\n                                        <TextField\n                                            name=\"city\"\n                                            error={errors.city}\n                                            onChange={handleChange('city')}\n                                            onBlur={() => handleBlur('city')}\n                                            helperText={errors.city}\n                                            fullWidth\n                                            value={values.city}\n                                            id=\"city\"\n                                            label=\"City *\"\n                                            variant=\"outlined\"\n                                            color=\"secondary\"\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} md={6}>\n                                        <TextField\n                                            name=\"pincode\"\n                                            error={errors.pincode}\n                                            onChange={handleChange('pincode')}\n                                            onBlur={() => handleBlur('pincode')}\n                                            helperText={errors.pincode}\n                                            fullWidth\n                                            value={values.pincode}\n                                            id=\"pincode\"\n                                            label=\"Pincode *\"\n                                            variant=\"outlined\"\n                                            color=\"secondary\"\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} md={6}>\n                                        <TextField\n                                            name=\"regDateTime\"\n                                            error={errors.regDateTime}\n                                            onChange={handleChange('regDateTime')}\n                                            onBlur={() => handleBlur('regDateTime')}\n                                            helperText={errors.regDateTime}\n                                            fullWidth\n                                            value={values.regDateTime}\n                                            id=\"regDateTime\"\n                                            label=\"Registered Date & Time *\"\n                                            variant=\"outlined\"\n                                            color=\"secondary\"\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} md={6}>\n                                        <TextField\n                                            name=\"updateDateTime\"\n                                            error={errors.updateDateTime}\n                                            onChange={handleChange('updateDateTime')}\n                                            onBlur={() => handleBlur('updateDateTime')}\n                                            helperText={errors.updateDateTime}\n                                            fullWidth\n                                            value={values.updateDateTime}\n                                            id=\"updateDateTime\"\n                                            label=\"Update Date & Time *\"\n                                            variant=\"outlined\"\n                                            color=\"secondary\"\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} md={6}>\n                                        <TextField\n                                            name=\"ip\"\n                                            error={errors.ip}\n                                            onChange={handleChange('ip')}\n                                            onBlur={() => handleBlur('ip')}\n                                            helperText={errors.ip}\n                                            fullWidth\n                                            value={values.ip}\n                                            id=\"ip\"\n                                            label=\"IP *\"\n                                            variant=\"outlined\"\n                                            color=\"secondary\"\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} md={6}>\n                                        <TextField\n                                            name=\"geolocation\"\n                                            error={errors.geolocation}\n                                            onChange={handleChange('geolocation')}\n                                            onBlur={() => handleBlur('geolocation')}\n                                            helperText={errors.geolocation}\n                                            fullWidth\n                                            value={values.geolocation}\n                                            id=\"geolocation\"\n                                            label=\"Geo Location *\"\n                                            variant=\"outlined\"\n                                            color=\"secondary\"\n                                        />\n                                    </Grid>\n                                </Grid>\n                                <Divider />\n                                <Box sx={{ mt: 4, mx: 2, display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                                    <Button onClick={handleClose} variant=\"outlined\" startIcon={<IconX />} color=\"secondary\">\n                                        Cancel\n                                    </Button>\n                                    <Button\n                                        onClick={handleSubmit}\n                                        variant=\"contained\"\n                                        endIcon={<IconArrowRight />}\n                                        color=\"secondary\"\n                                        disabled={isSubmitting}\n                                    >\n                                        {previousData ? 'Update' : 'Create'}\n                                    </Button>\n                                </Box>\n                            </SubCard>\n                        )}\n                    </Formik>\n                </Box>\n            </Modal>\n        </>\n    );\n};\n\nexport default EditCustomer;\n","/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable react/prop-types */\nimport { Button, Divider, Grid, TextField, Switch, Typography } from '@mui/material';\nimport Box from '@mui/material/Box';\nimport Modal from '@mui/material/Modal';\nimport { IconArrowRight, IconX } from '@tabler/icons';\nimport { useAxios } from 'hooks';\nimport { useEffect, useState } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport swal from 'sweetalert';\nimport SubCard from 'ui-component/cards/SubCard';\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    maxWidth: '98%',\n    maxHeight: '90vh',\n    overflow: 'auto',\n    transform: 'translate(-50%, -50%)',\n    minWidth: '50%',\n    bgcolor: 'background.paper',\n    borderRadius: '15px',\n    boxShadow: 24,\n    p: 4\n};\n\nconst validationSchema = Yup.object({\n    declineReason: Yup.string().required('Give the reason for decline the KYC')\n});\n\nconst DeclineKyc = ({ handleClose, open, setIsUpdateTable, previousData }) => {\n    const axios = useAxios();\n    const [initialValues, setInitialValues] = useState({});\n\n    useEffect(() => {\n        setInitialValues(previousData);\n    }, [previousData]);\n\n    return (\n        <>\n            <Modal open={open} onClose={handleClose} aria-labelledby=\"modal-modal-title\" aria-describedby=\"modal-modal-description\">\n                <Box sx={style}>\n                    <Formik\n                        initialValues={initialValues}\n                        validationSchema={validationSchema}\n                        enableReinitialize\n                        onSubmit={async (values, form) => {\n                            try {\n                                const options = {\n                                    headers: { 'Access-Control-Allow-Origin': '' }\n                                };\n                                const response = await axios.post(`/customer/register`, values, options);\n                                console.log(response, 'response');\n                                swal(response.data.message, { icon: 'success' });\n                                setIsUpdateTable((prevState) => !prevState);\n                                setTimeout(() => {\n                                    handleClose();\n                                }, 1000);\n                            } catch (err) {\n                                swal(err.response.data.message || 'Something went wrong');\n                            }\n                        }}\n                    >\n                        {({ handleBlur, handleChange, values, errors, handleSubmit, isSubmitting, touched }) => (\n                            <SubCard title=\"\">\n                                <Grid container spacing={1}>\n                                    <Grid item xs={12} md={12}>\n                                        <TextField\n                                            name=\"declineReason\"\n                                            error={errors.declineReason}\n                                            onChange={handleChange('declineReason')}\n                                            onBlur={() => handleBlur('declineReason')}\n                                            helperText={errors.declineReason}\n                                            fullWidth\n                                            value={values.declineReason}\n                                            id=\"declineReason\"\n                                            label=\"Reason for Decline the KYC *\"\n                                            variant=\"outlined\"\n                                            color=\"secondary\"\n                                        />\n                                    </Grid>\n                                </Grid>\n                                <Divider />\n                                <Box sx={{ mt: 4, mx: 2, display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                                    <Button onClick={handleClose} variant=\"outlined\" startIcon={<IconX />} color=\"secondary\">\n                                        Cancel\n                                    </Button>\n                                    <Button\n                                        onClick={handleSubmit}\n                                        variant=\"contained\"\n                                        endIcon={<IconArrowRight />}\n                                        color=\"secondary\"\n                                        disabled={isSubmitting}\n                                    >\n                                        Submit\n                                    </Button>\n                                </Box>\n                            </SubCard>\n                        )}\n                    </Formik>\n                </Box>\n            </Modal>\n        </>\n    );\n};\n\nexport default DeclineKyc;\n","/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable react/prop-types */\nimport { Box, Button, CircularProgress, IconButton, Divider, FormControl, Select, MenuItem, TextField } from '@mui/material';\nimport Modal from '@mui/material/Modal';\nimport { IconArrowRight, IconX } from '@tabler/icons';\nimport CommonTable from 'ui-component/Table/CommonTable';\nimport { useAxios } from 'hooks';\nimport { useEffect, useState } from 'react';\nimport * as Yup from 'yup';\nimport swal from 'sweetalert';\nimport { makeStyles } from '@mui/styles';\nimport SubCard from 'ui-component/cards/SubCard';\nimport DeclineKyc from './DeclineKyc';\n\nlet tableData = [];\nconst column = ['Aadhar No.', 'Aadhar Photo', 'PAN No.', 'PAN Card Photo', 'Check Photo', 'Actions'];\n\nconst style = {\n    position: 'relative',\n    top: '20%',\n    width: '90%',\n    margin: '5%'\n};\n\nconst useStyles = makeStyles((theme) => ({\n    actionsContainer: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'end'\n    }\n}));\n\nconst KYC = ({ handleClose, open, kyc, page }) => {\n    const classes = useStyles();\n    const axios = useAxios();\n    const [loading, setLoading] = useState(true);\n    const [active, setActive] = useState(true);\n    const [customers, setCustomers] = useState([]);\n    const [isSearch, setIsSearch] = useState(false);\n    const [isUpdateTable, setIsUpdateTable] = useState(false);\n    const [searches, setSearches] = useState([]);\n    const [openKyc, setOpenKyc] = useState('');\n    const [previousDataKyc, setPreviousDataKyc] = useState(null);\n    const [statusKyc, setStatusKyc] = useState(null);\n    const res = [];\n    const handleOpenKyc = () => {\n        setOpenKyc(true);\n        setPreviousDataKyc(null);\n    };\n\n    const handleCloseKyc = () => {\n        setOpenKyc(false);\n    };\n    console.log(kyc);\n    // useEffect(() => {\n    //     /* eslint-disable no-underscore-dangle */\n    //     setLoading(true);\n    //     setCustomers([]);\n    //     console.log(res);\n    //     axios\n    //         .post(`http://43.204.210.119/api/kyc/get-by-bidder`, { bidder: previousData._id })\n    //         .then((response) => {\n    //             setLoading(false);\n    //             res.push(response.data.details);\n    //             setCustomers(res);\n    //         })\n    //         .catch((err) => console.log(err));\n    // setLoading(true);\n    // setLoading(false);\n    // setCustomers([\n    //     {\n    //         aadharNo: '45678 987 56',\n    //         aadharPhoto: (\n    //             <a href=\"https://hindi.cdn.zeenews.com/hindi/sites/default/files/2021/10/03/936734-aadhaar-card.jpg\" target=\"_blenk\">\n    //                 <img\n    //                     src=\"https://hindi.cdn.zeenews.com/hindi/sites/default/files/2021/10/03/936734-aadhaar-card.jpg\"\n    //                     alt=\"\"\n    //                     width=\"150px\"\n    //                 />\n    //             </a>\n    //         ),\n    //         panNo: '567 78765',\n    //         panPhoto: (\n    //             <a\n    //                 href=\"https://cdn.dnaindia.com/sites/default/files/styles/full/public/2022/03/14/1047862-pan-card-ians.jpg\"\n    //                 target=\"_blenk\"\n    //             >\n    //                 <img\n    //                     src=\"https://cdn.dnaindia.com/sites/default/files/styles/full/public/2022/03/14/1047862-pan-card-ians.jpg\"\n    //                     alt=\"\"\n    //                     width=\"150px\"\n    //                 />\n    //             </a>\n    //         ),\n    //         checkPhoto: (\n    //             <a href=\"https://www.myloancare.in/assets/images/cancelled-cheque.webp\" target=\"_blenk\">\n    //                 <img src=\"https://www.myloancare.in/assets/images/cancelled-cheque.webp\" alt=\"\" width=\"150px\" />\n    //             </a>\n    //         )\n    //     }\n    // ]);\n\n    // axios\n    //     .get(`/customer`)\n    //     .then((response) => {\n    //         setLoading(false);\n    //         setCustomers(response.data.customerList);\n    //     })\n    //     .catch((err) => console.log(err));\n    // }, [isUpdateTable]);\n\n    const handleDecline = (index) => {\n        handleOpenKyc();\n        setPreviousDataKyc(customers[index]);\n    };\n\n    const handleApprove = (index) => {\n        setStatusKyc(true);\n        setPreviousDataKyc(customers[index]);\n    };\n    const data = [];\n    data.push(kyc[0]);\n    console.log(data);\n    tableData = data?.map((customer, i) => ({\n        aadharNo: customer?.aadhar.number,\n        aadhar: customer?.aadhar.imageLinkOne,\n        panNo: customer?.pan.number,\n        pan: customer?.pan.imageLink,\n        check: customer?.bank.fileLink,\n        action: (\n            <div className={classes.actionsContainer}>\n                {statusKyc ? (\n                    <IconButton>\n                        <Button variant=\"contained\" color=\"success\">\n                            Approved\n                        </Button>\n                    </IconButton>\n                ) : (\n                    <div>\n                        <IconButton>\n                            <Button variant=\"contained\" color=\"success\" onClick={() => handleApprove(i)}>\n                                Approve\n                            </Button>\n                        </IconButton>\n                        <IconButton>\n                            <Button variant=\"outlined\" color=\"error\" onClick={() => handleDecline(i)}>\n                                Decline\n                            </Button>\n                        </IconButton>\n                    </div>\n                )}\n            </div>\n        )\n    }));\n\n    return (\n        <>\n            <Modal open={open} onClose={handleClose} aria-labelledby=\"modal-modal-title\" aria-describedby=\"modal-modal-description\">\n                <Box sx={style}>\n                    {customers.length <= 0 ? (\n                        <Box\n                            sx={{\n                                display: 'flex',\n                                justifyContent: 'center',\n                                alignItems: 'center',\n                                p: 1,\n                                m: 1,\n                                bgcolor: 'background.paper',\n                                borderRadius: 1\n                            }}\n                        >\n                            <CircularProgress color=\"secondary\" />\n                        </Box>\n                    ) : (\n                        <CommonTable\n                            column={column}\n                            data={tableData}\n                            setBanner={setCustomers}\n                            setIsUpdateTable={setIsUpdateTable}\n                            page={page}\n                        />\n                    )}\n                </Box>\n            </Modal>\n            <DeclineKyc handleClose={handleCloseKyc} open={openKyc} setIsUpdateTable={setIsUpdateTable} previousData={previousDataKyc} />\n        </>\n    );\n};\n\nexport default KYC;\n","/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable react/prop-types */\nimport { Button, Divider, Grid, TextField, Switch, Typography } from '@mui/material';\nimport Box from '@mui/material/Box';\nimport Modal from '@mui/material/Modal';\nimport { IconArrowRight, IconX } from '@tabler/icons';\nimport { useAxios } from 'hooks';\nimport { useEffect, useState } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport swal from 'sweetalert';\nimport SubCard from 'ui-component/cards/SubCard';\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    maxWidth: '98%',\n    maxHeight: '90vh',\n    overflow: 'auto',\n    transform: 'translate(-50%, -50%)',\n    minWidth: '50%',\n    bgcolor: 'background.paper',\n    borderRadius: '15px',\n    boxShadow: 24,\n    p: 4\n};\n\nconst validationSchema = Yup.object({\n    bankName: Yup.string().required('Bank Name is required'),\n    ifscCode: Yup.string().required('IFSC Code is required'),\n    branchName: Yup.string().required('Branch Name is required'),\n    accountNumber: Yup.string().required('Account Number is required')\n});\n\nconst EditBank = ({ handleClose, open, setIsUpdateTable, previousData }) => {\n    const axios = useAxios();\n    const [initialValues, setInitialValues] = useState({});\n\n    useEffect(() => {\n        setInitialValues(previousData);\n    }, [previousData]);\n\n    return (\n        <>\n            <Modal open={open} onClose={handleClose} aria-labelledby=\"modal-modal-title\" aria-describedby=\"modal-modal-description\">\n                <Box sx={style}>\n                    <Formik\n                        initialValues={initialValues}\n                        validationSchema={validationSchema}\n                        enableReinitialize\n                        onSubmit={async (values, form) => {\n                            try {\n                                const options = {\n                                    headers: { 'Access-Control-Allow-Origin': '' }\n                                };\n                                const response = await axios.post(`/customer/register`, values, options);\n                                console.log(response, 'response');\n                                swal(response.data.message, { icon: 'success' });\n                                setIsUpdateTable((prevState) => !prevState);\n                                setTimeout(() => {\n                                    handleClose();\n                                }, 1000);\n                            } catch (err) {\n                                swal(err.response.data.message || 'Something went wrong');\n                            }\n                        }}\n                    >\n                        {({ handleBlur, handleChange, values, errors, handleSubmit, isSubmitting, touched }) => (\n                            <SubCard title=\"Edit Bank Details\">\n                                <Grid container spacing={2}>\n                                    <Grid item xs={12} md={6}>\n                                        <TextField\n                                            name=\"bankName\"\n                                            error={errors.bankName}\n                                            onChange={handleChange('bankName')}\n                                            onBlur={() => handleBlur('bankName')}\n                                            helperText={errors.bankName}\n                                            fullWidth\n                                            value={values.bankName}\n                                            id=\"bankName\"\n                                            label=\"Bank Name *\"\n                                            variant=\"outlined\"\n                                            color=\"secondary\"\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} md={6}>\n                                        <TextField\n                                            name=\"ifscCode\"\n                                            error={errors.ifscCode}\n                                            onChange={handleChange('ifscCode')}\n                                            onBlur={() => handleBlur('ifscCode')}\n                                            helperText={errors.ifscCode}\n                                            fullWidth\n                                            value={values.ifscCode}\n                                            id=\"ifscCode\"\n                                            label=\"IFSC Code *\"\n                                            variant=\"outlined\"\n                                            color=\"secondary\"\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} md={6}>\n                                        <TextField\n                                            name=\"branchName\"\n                                            error={errors.branchName}\n                                            onChange={handleChange('branchName')}\n                                            onBlur={() => handleBlur('branchName')}\n                                            helperText={errors.branchName}\n                                            fullWidth\n                                            value={values.branchName}\n                                            id=\"branchName\"\n                                            label=\"Branch Name *\"\n                                            variant=\"outlined\"\n                                            color=\"secondary\"\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} md={6}>\n                                        <TextField\n                                            name=\"accountNumber\"\n                                            error={errors.accountNumber}\n                                            onChange={handleChange('accountNumber')}\n                                            onBlur={() => handleBlur('accountNumber')}\n                                            helperText={errors.accountNumber}\n                                            fullWidth\n                                            value={values.accountNumber}\n                                            id=\"accountNumber\"\n                                            label=\"Account Number *\"\n                                            variant=\"outlined\"\n                                            color=\"secondary\"\n                                        />\n                                    </Grid>\n                                </Grid>\n                                <Divider />\n                                <Box sx={{ mt: 4, mx: 2, display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                                    <Button onClick={handleClose} variant=\"outlined\" startIcon={<IconX />} color=\"secondary\">\n                                        Cancel\n                                    </Button>\n                                    <Button\n                                        onClick={handleSubmit}\n                                        variant=\"contained\"\n                                        endIcon={<IconArrowRight />}\n                                        color=\"secondary\"\n                                        disabled={isSubmitting}\n                                    >\n                                        Update\n                                    </Button>\n                                </Box>\n                            </SubCard>\n                        )}\n                    </Formik>\n                </Box>\n            </Modal>\n        </>\n    );\n};\n\nexport default EditBank;\n","/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable react/prop-types */\nimport { Box, Button, CircularProgress, IconButton, Divider, FormControl, Select, MenuItem, TextField } from '@mui/material';\nimport Modal from '@mui/material/Modal';\nimport { IconEdit, IconX } from '@tabler/icons';\nimport CommonTable from 'ui-component/Table/CommonTable';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport * as Yup from 'yup';\nimport swal from 'sweetalert';\nimport { makeStyles } from '@mui/styles';\nimport SubCard from 'ui-component/cards/SubCard';\nimport EditBank from './EditBank';\n\nlet tableData = [];\nconst column = ['Bank Name', 'IFSC Code', 'Branch Name', 'Account Number', 'Action'];\n\nconst style = {\n    position: 'relative',\n    top: '20%',\n    width: '90%',\n    margin: '5%'\n};\n\nconst useStyles = makeStyles((theme) => ({\n    actionsContainer: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'end'\n    }\n}));\n\nconst Bank = ({ handleClose, open, previousData, page }) => {\n    const classes = useStyles();\n    const [loading, setLoading] = useState(true);\n    const [active, setActive] = useState(true);\n    const [customers, setCustomers] = useState([]);\n    const [isSearch, setIsSearch] = useState(false);\n    const [isUpdateTable, setIsUpdateTable] = useState(false);\n    const [searches, setSearches] = useState([]);\n    const [previousDataBank, setPreviousDataBank] = useState(null);\n    const [openBank, setOpenBank] = useState('');\n\n    const handleOpenBank = () => {\n        setPreviousDataBank(null);\n        setOpenBank(true);\n    };\n\n    const handleCloseBank = () => setOpenBank(false);\n    useEffect(() => {\n        /* eslint-disable no-underscore-dangle */\n        setLoading(true);\n        axios\n            .post(`http://43.204.210.119/api/bank-details/get-by-bidder`, { bidder: previousData._id })\n            .then((response) => {\n                setLoading(false);\n                const res = [];\n                res.push(response.data.details);\n                setCustomers(res);\n            })\n            .catch((err) => console.log(err));\n\n        // setLoading(true);\n        // setLoading(false);\n        // setCustomers([\n        //     {\n        //         bankName: 'Bank of India',\n        //         ifscCode: '456789',\n        //         branchName: 'Area',\n        //         accountNumber: '9716145198'\n        //     }\n        // ]);\n\n        // axios\n        //     .get(`/customer`)\n        //     .then((response) => {\n        //         setLoading(false);\n        //         setCustomers(response.data.customerList);\n        //     })\n        //     .catch((err) => console.log(err));\n    }, [isUpdateTable]);\n\n    const handleEdit = (index) => {\n        handleOpenBank();\n        setPreviousDataBank(customers[index]);\n    };\n\n    const data = isSearch ? searches : customers;\n    console.log(data, isSearch);\n\n    tableData = data?.map((customer, i) => ({\n        bankName: customer?.bank,\n        ifscCode: customer?.ifsc,\n        branchName: customer?.branch,\n        accountNumber: customer?.accountNumber,\n        action: (\n            <div className={classes.actionsContainer}>\n                <IconButton title=\"Edit\" onClick={() => handleEdit(i)}>\n                    <IconEdit />\n                </IconButton>\n            </div>\n        )\n    }));\n\n    return (\n        <>\n            <Modal open={open} onClose={handleClose} aria-labelledby=\"modal-modal-title\" aria-describedby=\"modal-modal-description\">\n                <Box sx={style}>\n                    {customers.length <= 0 ? (\n                        <Box\n                            sx={{\n                                display: 'flex',\n                                justifyContent: 'center',\n                                alignItems: 'center',\n                                p: 1,\n                                m: 1,\n                                bgcolor: 'background.paper',\n                                borderRadius: 1\n                            }}\n                        >\n                            <CircularProgress color=\"secondary\" />\n                        </Box>\n                    ) : (\n                        <CommonTable\n                            column={column}\n                            data={tableData}\n                            setBanner={setCustomers}\n                            setIsUpdateTable={setIsUpdateTable}\n                            page={page}\n                        />\n                    )}\n                </Box>\n            </Modal>\n            <EditBank handleClose={handleCloseBank} open={openBank} setIsUpdateTable={setIsUpdateTable} previousData={previousDataBank} />\n        </>\n    );\n};\n\nexport default Bank;\n","/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable react/prop-types */\nimport { Button, Divider, Grid, TextField, Switch, Typography } from '@mui/material';\nimport Box from '@mui/material/Box';\nimport Modal from '@mui/material/Modal';\nimport { IconArrowRight, IconX } from '@tabler/icons';\nimport { useAxios } from 'hooks';\nimport { useEffect, useState } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport swal from 'sweetalert';\nimport SubCard from 'ui-component/cards/SubCard';\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    maxWidth: '98%',\n    maxHeight: '90vh',\n    overflow: 'auto',\n    transform: 'translate(-50%, -50%)',\n    minWidth: '50%',\n    bgcolor: 'background.paper',\n    borderRadius: '15px',\n    boxShadow: 24,\n    p: 4\n};\n\nconst validationSchema = Yup.object({\n    agreementId: Yup.string().required('Agreement Id is required'),\n    url: Yup.string().required('Url is required'),\n    signDate: Yup.string().required('Sign Date is required')\n});\n\nconst EditAgreement = ({ handleClose, open, setIsUpdateTable, previousData }) => {\n    const axios = useAxios();\n    const [initialValues, setInitialValues] = useState({});\n\n    useEffect(() => {\n        setInitialValues(previousData);\n    }, [previousData]);\n\n    return (\n        <>\n            <Modal open={open} onClose={handleClose} aria-labelledby=\"modal-modal-title\" aria-describedby=\"modal-modal-description\">\n                <Box sx={style}>\n                    <Formik\n                        initialValues={initialValues}\n                        validationSchema={validationSchema}\n                        enableReinitialize\n                        onSubmit={async (values, form) => {\n                            try {\n                                const options = {\n                                    headers: { 'Access-Control-Allow-Origin': '' }\n                                };\n                                const response = await axios.post(`/customer/register`, values, options);\n                                console.log(response, 'response');\n                                swal(response.data.message, { icon: 'success' });\n                                setIsUpdateTable((prevState) => !prevState);\n                                setTimeout(() => {\n                                    handleClose();\n                                }, 1000);\n                            } catch (err) {\n                                swal(err.response.data.message || 'Something went wrong');\n                            }\n                        }}\n                    >\n                        {({ handleBlur, handleChange, values, errors, handleSubmit, isSubmitting, touched }) => (\n                            <SubCard title=\"Edit Agreement Details\">\n                                <Grid container spacing={2}>\n                                    <Grid item xs={12} md={6}>\n                                        <TextField\n                                            name=\"agreementId\"\n                                            error={errors.agreementId}\n                                            onChange={handleChange('agreementId')}\n                                            onBlur={() => handleBlur('agreementId')}\n                                            helperText={errors.agreementId}\n                                            fullWidth\n                                            value={values.agreementId}\n                                            id=\"agreementId\"\n                                            label=\"Agreement Id *\"\n                                            variant=\"outlined\"\n                                            color=\"secondary\"\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} md={6}>\n                                        <TextField\n                                            name=\"url\"\n                                            error={errors.url}\n                                            onChange={handleChange('url')}\n                                            onBlur={() => handleBlur('url')}\n                                            helperText={errors.url}\n                                            fullWidth\n                                            value={values.url}\n                                            id=\"url\"\n                                            label=\"URL *\"\n                                            variant=\"outlined\"\n                                            color=\"secondary\"\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} md={6}>\n                                        Sign Date *\n                                        <TextField\n                                            name=\"signDate\"\n                                            error={errors.signDate}\n                                            onChange={handleChange('signDate')}\n                                            onBlur={() => handleBlur('signDate')}\n                                            helperText={errors.signDate}\n                                            fullWidth\n                                            value={values.signDate}\n                                            id=\"signDate\"\n                                            label=\"\"\n                                            variant=\"outlined\"\n                                            color=\"secondary\"\n                                            type=\"date\"\n                                        />\n                                    </Grid>\n                                </Grid>\n                                <Divider />\n                                <Box sx={{ mt: 4, mx: 2, display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                                    <Button onClick={handleClose} variant=\"outlined\" startIcon={<IconX />} color=\"secondary\">\n                                        Cancel\n                                    </Button>\n                                    <Button\n                                        onClick={handleSubmit}\n                                        variant=\"contained\"\n                                        endIcon={<IconArrowRight />}\n                                        color=\"secondary\"\n                                        disabled={isSubmitting}\n                                    >\n                                        Update\n                                    </Button>\n                                </Box>\n                            </SubCard>\n                        )}\n                    </Formik>\n                </Box>\n            </Modal>\n        </>\n    );\n};\n\nexport default EditAgreement;\n","/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable react/prop-types */\nimport { Box, Button, CircularProgress, IconButton, Divider, FormControl, Select, MenuItem, TextField } from '@mui/material';\nimport Modal from '@mui/material/Modal';\nimport { IconEdit, IconX } from '@tabler/icons';\nimport CommonTable from 'ui-component/Table/CommonTable';\nimport { useAxios } from 'hooks';\nimport { useEffect, useState } from 'react';\nimport * as Yup from 'yup';\nimport swal from 'sweetalert';\nimport { makeStyles } from '@mui/styles';\nimport SubCard from 'ui-component/cards/SubCard';\nimport EditAgreement from './EditAgreement';\n\nlet tableData = [];\nconst column = ['Agreement Id', 'Url', 'Sign Date', 'Action'];\n\nconst style = {\n    position: 'relative',\n    top: '20%',\n    width: '90%',\n    margin: '5%'\n};\n\nconst useStyles = makeStyles((theme) => ({\n    actionsContainer: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'end'\n    }\n}));\n\nconst Agreement = ({ handleClose, open, previousData, page }) => {\n    const classes = useStyles();\n    const axios = useAxios();\n    const [loading, setLoading] = useState(true);\n    const [active, setActive] = useState(true);\n    const [customers, setCustomers] = useState([]);\n    const [isSearch, setIsSearch] = useState(false);\n    const [isUpdateTable, setIsUpdateTable] = useState(false);\n    const [searches, setSearches] = useState([]);\n    const [previousDataAgreement, setPreviousDataAgreement] = useState(null);\n    const [openAgreement, setOpenAgreement] = useState('');\n\n    const handleOpenAgreement = () => {\n        setPreviousDataAgreement(null);\n        setOpenAgreement(true);\n    };\n\n    const handleCloseAgreement = () => setOpenAgreement(false);\n\n    useEffect(() => {\n        // setLoading(true);\n        setLoading(false);\n        setCustomers([\n            {\n                agreementId: '456789',\n                url: 'http://www.google.com',\n                signDate: '22/4/2018'\n            }\n        ]);\n\n        // axios\n        //     .get(`/customer`)\n        //     .then((response) => {\n        //         setLoading(false);\n        //         setCustomers(response.data.customerList);\n        //     })\n        //     .catch((err) => console.log(err));\n    }, [isUpdateTable]);\n\n    const handleEdit = (index) => {\n        handleOpenAgreement();\n        setPreviousDataAgreement(customers[index]);\n    };\n\n    const data = isSearch ? searches : customers;\n    console.log(data, isSearch);\n\n    tableData = data?.map((customer, i) => ({\n        agreementId: customer?.agreementId,\n        url: customer?.url,\n        signDate: customer?.signDate,\n        action: (\n            <div className={classes.actionsContainer}>\n                <IconButton title=\"Edit\" onClick={() => handleEdit(i)}>\n                    <IconEdit />\n                </IconButton>\n            </div>\n        )\n    }));\n\n    return (\n        <>\n            <Modal open={open} onClose={handleClose} aria-labelledby=\"modal-modal-title\" aria-describedby=\"modal-modal-description\">\n                <Box sx={style}>\n                    {customers.length <= 0 ? (\n                        <Box\n                            sx={{\n                                display: 'flex',\n                                justifyContent: 'center',\n                                alignItems: 'center',\n                                p: 1,\n                                m: 1,\n                                bgcolor: 'background.paper',\n                                borderRadius: 1\n                            }}\n                        >\n                            <CircularProgress color=\"secondary\" />\n                        </Box>\n                    ) : (\n                        <CommonTable\n                            column={column}\n                            data={tableData}\n                            setBanner={setCustomers}\n                            setIsUpdateTable={setIsUpdateTable}\n                            page={page}\n                        />\n                    )}\n                </Box>\n            </Modal>\n            <EditAgreement\n                handleClose={handleCloseAgreement}\n                open={openAgreement}\n                setIsUpdateTable={setIsUpdateTable}\n                previousData={previousDataAgreement}\n            />\n        </>\n    );\n};\n\nexport default Agreement;\n","/* eslint-disable no-underscore-dangle */\nimport { useEffect, useState } from 'react';\nimport { Box, Button, CircularProgress, IconButton, Switch, FormControl, Select, MenuItem, TextField } from '@mui/material';\nimport { IconUserCheck, IconBuildingBank, IconLicense, IconEdit } from '@tabler/icons';\nimport { format } from 'date-fns';\nimport EditCustomer from './EditCustomer';\nimport KYC from './Kyc/kyc';\nimport Bank from './Bank/Bank';\nimport Agreement from './Agreement/Agreement';\nimport config from 'config';\nimport SubCard from 'ui-component/cards/SubCard';\nimport CommonTable from 'ui-component/Table/CommonTable';\nimport DropDown from 'ui-component/Table/CustomDropDown';\nimport { makeStyles } from '@mui/styles';\nimport axios from 'axios';\n\nlet tableData = [];\nconst column = ['Sl. No', 'Name', 'Email Id', 'Phone No', 'City', 'Joining Date', 'Status', 'Actions'];\n\nconst useStyles = makeStyles((theme) => ({\n    actionsContainer: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'end'\n    }\n}));\n\nconst Customers = () => {\n    const classes = useStyles();\n    const [active, setActive] = useState('');\n    const [loading, setLoading] = useState(true);\n    const [customers, setCustomers] = useState([]);\n    const [kyc, setKyc] = useState([]);\n    const [isUpdateTable, setIsUpdateTable] = useState(false);\n    const [open, setOpen] = useState('');\n    const [searches, setSearches] = useState([]);\n    const [isSearch, setIsSearch] = useState(false);\n    const [previousData, setPreviousData] = useState(null);\n    const [page, setPage] = useState('');\n    const res = [];\n    const handleOpen = () => {\n        setPreviousData(null);\n        setOpen(true);\n    };\n    const handleClose = () => setOpen(false);\n\n    useEffect(() => {\n        setLoading(true);\n        axios\n            .get(`http://43.204.210.119/api/bidders`)\n            .then((response) => {\n                console.log(response.data);\n                setLoading(false);\n                setCustomers(response.data.bidderList);\n            })\n            .catch((err) => console.log(err));\n    }, [isUpdateTable]);\n\n    const handleKeyUpSearch = (e) => {\n        setIsSearch(true);\n        console.log(customers, 'customers');\n        const data = customers.filter((b) => b?.name.toUpperCase().includes(e.target.value.toUpperCase()));\n        console.log(data, 'data');\n        setSearches(data);\n        if (e.target.value === '') setIsSearch(false);\n    };\n\n    const handleActive = (e) => {\n        let active = false;\n        if (e.target.value === 'active') active = true;\n        setActive(e.target.value);\n        setIsSearch(true);\n        // eslint-disable-next-line eqeqeq\n        const data = customers.filter((b) => active === b.active);\n        console.log(data, customers, e.target.value, 'data');\n        setSearches(data);\n        if (!e.target.value) setIsSearch(false);\n    };\n\n    const handleEdit = (index) => {\n        handleOpen();\n        setPreviousData(customers[index]);\n        setPage('Edit');\n    };\n\n    const handleKyc = (index) => {\n        handleOpen();\n        setPreviousData(customers[index]);\n        setPage('KYC');\n        axios\n            .post(`http://43.204.210.119/api/kyc/get-by-bidder`, { bidder: customers[index]._id })\n            .then((response) => {\n                setLoading(false);\n                res.push(response.data.details);\n                setKyc(res);\n            })\n            .catch((err) => console.log(err));\n    };\n\n    const handleBank = (index) => {\n        handleOpen();\n        setPreviousData(customers[index]);\n        setPage('Bank');\n    };\n\n    const handleAgreement = (index) => {\n        handleOpen();\n        setPreviousData(customers[index]);\n        setPage('Agreement');\n    };\n\n    const data = isSearch ? searches : customers;\n    console.log(data, isSearch);\n\n    const handleActiveChange = (id, value) => {\n        console.log(id, value);\n    };\n\n    tableData = data?.map((customer, i) => ({\n        id: i + 1,\n        name: customer?.fullname,\n        email: customer?.email,\n        contactNumber: customer?.contactNumber,\n        city: customer?.city,\n        joiningDate: format(new Date(`${customer.createdAt}`), 'yyyy-MM-dd'),\n        status: <Switch size=\"small\" defaultChecked={customer.active} onChange={(value) => handleActiveChange(customer._id, value)} />,\n        action: (\n            <div className={classes.actionsContainer}>\n                <IconButton title=\"KYC\" onClick={() => handleKyc(i)}>\n                    <IconUserCheck />\n                </IconButton>\n                <IconButton title=\"Bank Details\" onClick={() => handleBank(i)}>\n                    <IconBuildingBank />\n                </IconButton>\n                <IconButton title=\"Agreement\" onClick={() => handleAgreement(i)}>\n                    <IconLicense />\n                </IconButton>\n                <IconButton title=\"Edit\" onClick={() => handleEdit(i)}>\n                    <IconEdit />\n                </IconButton>\n            </div>\n        )\n    }));\n\n    return (\n        <>\n            {page === 'Agreement' && (\n                <Agreement\n                    handleClose={handleClose}\n                    open={open}\n                    setIsUpdateTable={setIsUpdateTable}\n                    previousData={previousData}\n                    page={page}\n                />\n            )}\n            {page === 'Bank' && (\n                <Bank handleClose={handleClose} open={open} setIsUpdateTable={setIsUpdateTable} previousData={previousData} page={page} />\n            )}\n            {page === 'KYC' && <KYC handleClose={handleClose} open={open} setIsUpdateTable={setIsUpdateTable} kyc={kyc} page={page} />}\n            {page === 'Edit' && (\n                <EditCustomer handleClose={handleClose} open={open} setIsUpdateTable={setIsUpdateTable} previousData={previousData} />\n            )}\n\n            <div>\n                <SubCard\n                    title={loading ? <CircularProgress color=\"secondary\" /> : 'Customers'}\n                    secondary={\n                        <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                            <TextField onKeyUp={handleKeyUpSearch} label=\"Search by Name...\" color=\"secondary\" size=\"small\" />\n                            <FormControl sx={{ m: 1, minWidth: 200 }}>\n                                <Select\n                                    size=\"small\"\n                                    value={active}\n                                    onChange={handleActive}\n                                    displayEmpty\n                                    inputProps={{ 'aria-label': 'Without label' }}\n                                >\n                                    <MenuItem value=\"\">\n                                        <em>Select Active/InActive</em>\n                                    </MenuItem>\n                                    <MenuItem value=\"active\">Active</MenuItem>\n                                    <MenuItem value=\"inactive\">InActive</MenuItem>\n                                </Select>\n                                {/* <FormHelperText>Without label</FormHelperText> */}\n                            </FormControl>\n                        </Box>\n                    }\n                >\n                    {customers.length <= 0 ? (\n                        <Box\n                            sx={{\n                                display: 'flex',\n                                justifyContent: 'center',\n                                alignItems: 'center',\n                                p: 1,\n                                m: 1,\n                                bgcolor: 'background.paper',\n                                borderRadius: 1\n                            }}\n                        >\n                            <CircularProgress color=\"secondary\" />\n                        </Box>\n                    ) : (\n                        <CommonTable column={column} data={tableData} setBanner={setCustomers} setIsUpdateTable={setIsUpdateTable} />\n                    )}\n                </SubCard>\n            </div>\n        </>\n    );\n};\n\nexport default Customers;\n"],"sourceRoot":""}